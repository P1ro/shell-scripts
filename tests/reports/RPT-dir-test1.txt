#!/usr/bin/env bats


# Make executables ./tests/../ visible to PATH
PATH="/home/aveey/tom-project/shell-scripts/tests/../:$PATH"

# Source files
shopt -s expand_aliases
source /home/aveey/tom-project/shell-scripts/tests/dir-aliases-test-revised.ipynb || true


@test "test id995075" {
	testfolder=$(echo /tmp/test-id995075-$$)
	mkdir $testfolder && cd $testfolder
	actual=$(test-id995075-actual)
	expected=$(test-id995075-expected)
	echo "========== actual =========="
	echo "$actual" 
	echo "========= expected ========="
	echo "$expected" 
	echo "============================"
	[ "$actual" == "$expected" ]
}

function test-id995075-actual () {
	\"#
}

function test-id995075-expected () {
	echo -e '\\"ln: failed to create symbolic link \'link1\': File exists?\\"\\n",\n"\\n",\n"# Should only be four files total (along with . and ..)\\n",\n"ls -R | wc -l\\n",\n"# => 3"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 11,\n   "id": "df424784",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "#! /usr/bin/env bash\\n",\n  "# -*- coding: utf-8 -*-\\n",\n  "\\n",\n  "## via tomohara-aliases.bash\\n",\n  "## trace directory commands\\n",\n  "\\n",\n  "# Support for ls (list directory contents)\\n",\n  "# \\n",\n  "# ls options: # --all: all files; -l long listing; -t by time; --human-readable: uses numeric suffixes like MB; --no-group: omit file permision group; --directory: no subdirectory listings.\\n",\n  "# TODO: Add --long as alias for -l to ls source control and check-in [WTH?]! Likweise, all aliases for other common options without long names (e.g., -t).\\n",\n  "#\\n",\n  "LS=\\"/bin/ls\\"\\n",\n  "core_dir_options=\\"--all -l -t  --human-readable\\"\\n",\n  "dir_options=\\"${core_dir_options} --no-group\\"\\n",\n  "# maldito shellcheck: SC2046 [Quote this to prevent word splitting] and SC2086 [Double quote to prevent globbing]\\n",\n  "# shellcheck disable=SC2046,SC2086\\n",\n  "{\\n",\n  "if [ \\"$OSTYPE\\" = \\"solaris\\" ]; then dir_options=\\"-alt\\"; fi\\n",\n  "if [ \\"$BAREBONES_HOST\\" = \\"1\\" ]; then dir_options=\\"-altk\\"; fi\\n",\n  "function dir () {\\n",\n  "    local opts=\\"$dir_options\\"\\n",\n  "    # note: see https://stackoverflow.com/questions/1853946/getting-the-last-argument-passed-to-a-shell-script\\n",\n  "    local dir=\\"${!#}\\"\\n",\n  "    # hack: only shows directory contents if name ends in slash (e.g., /etc/)\\n",\n  "    # note: pattern is POSIX extended regular expression as per bash manual\\n",\n  "    local regex=\\"^.*/$\\";\\n",\n  "    if [[ (! (($dir != \\"\\") || ($dir =~ $regex))) ]]; then\\n",\n  "        opts=\\"$opts --directory\\";\\n",\n  "    fi\\n",\n  "    $LS ${opts} \\"$@\\" 2>&1 | $PAGER;\\n",\n  "function dir-proper () { $LS ${dir_options} --directory \\"$@\\" 2>&1 | $PAGER; }\\n",\n  "alias ls-full=\'$LS ${core_dir_options}\'\\n",\n  "function dir-full () { ls-full \\"$@\\" 2>&1 | $PAGER; }\\n",\n  "## TODO: WH with the grep (i.e., isn\'t there a simpler way)?\\n",\n  "function dir-sans-backups () { $LS ${dir_options} \\"$@\\" 2>&1 | $GREP -v \'~[0-9]*~\' | $PAGER; }\\n",\n  "# dir-ro/dir-rw(spec): show files that are read-only/read-write for the user\\n",\n  "function dir-ro () { $LS ${dir_options} \\"$@\\" 2>&1 | $GREP -v \'^..w\' | $PAGER; }\\n",\n  "function dir-rw () { $LS ${dir_options} \\"$@\\" 2>&1 | $GREP \'^..w\' | $PAGER; }\\n",\n  "\\n",\n  "function subdirs () { $LS ${dir_options} \\"$@\\" 2>&1 | $GREP ^d | $PAGER; }\\n",\n  "#\\n",\n  "# subdirs-proper(): shows subdirs in colymn format omitting ones w/ leading dots\\n",\n  "# note: omits cases like ./ and ./.cpan from find and then removes ./ prefix\\n",\n  "quiet-unalias subdirs-proper\\n",\n  "function subdirs-proper () { find . -maxdepth 1 -type d | $EGREP -v \'^((\\\\.)|(\\\\.\\\\/\\\\..*))$\' | sort | perl -pe \\"s@^\\\\./@@;\\" | column; }\\n",\n  "# note: -f option overrides -t: Unix sorts alphabetically by default\\n",\n  "# via man ls:\\n",\n  "#   -f     do not sort, enable -aU, disable -$LS --color\\n",\n  "# TODO: simplify -t removal (WTH with perl regex replacement?!)\\n",\n  "function dir_options_sans_t () { echo \\"$dir_options\\" | perl -pe \'s/\\\\-t//;\'; }\\n",\n  "function subdirs-alpha () { $LS $(dir_options_sans_t) \\"$@\\" 2>&1 | $GREP ^d | $PAGER; }\\n",\n  "function sublinks () { $LS ${dir_options} \\"$@\\" 2>&1 | $GREP ^l | $PAGER; }\\n",\n  "function sublinks-alpha () { $LS $(dir_options_sans_t) \\"$@\\" 2>&1 | $GREP ^l | $PAGER; }\\n",\n  "}\\n",\n  "# TODO: show non-work-related directory example\\n",\n  "#\\n",\n  "alias symlinks=\'sublinks\'\\n",\n  "# symlinks-proper: just show file name info for symbolic links, which starts at column 43\\n",\n  "alias symlinks-proper=\'symlinks | cut --characters=43-\'\\n",\n  "#\\n",\n  "function sublinks-proper { sublinks \\"$@\\" | cut --characters=42-  | $PAGER; }\\n",\n  "alias symlinks-proper=sublinks-proper\\n",\n  "#\\n",\n  "alias glob-links=\'find . -maxdepth 1 -type l | sed -e \\"s/.\\\\///g\\"\'\\n",\n  "alias glob-subdirs=\'find . -mindepth 1 -maxdepth 1 -type d | sed -e \\"s/.\\\\///g\\"\'\\n",\n  "#\\n",\n  "alias ls-R=\'$LS -R >| ls-R.list; wc -l ls-R.list\'\\n",\n  "#\\n",\n  "# TODO: create ls alias that shows file name with symbolic links (as with ls -l but without other information\\n",\n  "# ex: ls -l | perl -pe \'s/^.* \\\\d\\\\d:\\\\d\\\\d //;\'\\n",\n  "}\\n",\n  "\\n",\n  "# link-symbolic-safe: creates symbolic link and avoids quirks with links to directories\\n",\n  "# EX: link-symbolic-safe /tmp temp-link; link-symbolic-safe --force ~/temp temp-link; ls -l temp-link | grep /tmp => \\"\\"\\n",\n  "alias ln-symbolic=\'ln --symbolic --verbose\'\\n",\n  "alias link-symbolic-safe=\'ln-symbolic --no-target-directory --no-dereference\'\\n",\n  "alias link-symbolic-regular=\'ln-symbolic\'\\n",\n  "## TODO: alias ln-symbolic-force=\'link-symbolic --force\'\\n",\n  "\\n"\n ]\n}\n   ],\n   "source": [\n"# FYI: the current aliases and functions\\n",\n"cat $BIN_DIR/tests/_dir-aliases.bash\\n",\n"\\n",\n"## TODO: convert this to inline comments (to avoid clutter in the output)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 12,\n   "id": "cf92e475",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"##EXECUTING _dir-aliases.bash\\n",\n"bash $BIN_DIR/tests/_dir-aliases.bash"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 13,\n   "id": "209e21d6",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "bash: sublinks: command not found\\n"\n ]\n}\n   ],\n   "source": [\n"## Some of the aliases do not work due to the absence of \'sublinks\' command\\n",\n"symlinks-proper"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 14,\n   "id": "78312919",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "\'temp-link\' -> \'/tmp\'\\n"\n ]\n}\n   ],\n   "source": [\n"# SYMBOLIC LINK temp-link CREATED WHICH LINKS /tmp DIRECTORY \\n",\n"ln-symbolic /tmp temp-link"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 15,\n   "id": "3bdce856",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "total 0\\n",\n  "-rw-rw-r-- \\n",\n  "lrwxrwxrwx -> file1\\n",\n  "lrwxrwxrwx ink -> /tmp\\n"\n ]\n}\n   ],\n   "source": [\n"## OLD: ls -l | cut CUTS characters between x-y\\n",\n"ls -l | cut --characters=12-46 --complement"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 16,\n   "id": "4d064e03",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"## CREATES A SYMBOLIC LINK FORCEFULLY\\n",\n"alias ln-symbolic-force=\'ln-symbolic --force\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 17,\n   "id": "caa07202",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "ln: failed to create symbolic link \'temp-link/tmp\': File exists\\n",\n  "\'temp-link/tmp\' -> \'/tmp\'\\n"\n ]\n}\n   ],\n   "source": [\n"## ln-symbolic SHOULD GENERATE AN ERROR AS PREVIOUS LINK WITH SAME NAME EXISTS\\n",\n"# ln: failed to create symbolic link \'temp-link\': File exist\\n",\n"ln-symbolic /tmp temp-link\\n",\n"## ln-symbolic-force SHOULD BYPASS THE CONDITION\\n",\n"# ln: failed to create symbolic link \'temp-link\': File exist\\n",\n"ln-symbolic-force /tmp temp-link"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 18,\n   "id": "30835d26",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "\'temp-link-safe\' -> \'/tmp/tmp\'\\n"\n ]\n}\n   ],\n   "source": [\n"## CREATES A SAFE SYMBOLIC LINK (link-symbolic-safe=\'ln-symbolic --no-target-directory --no-dereference\')\\n",\n"link-symbolic-safe /tmp/tmp temp-link-safe"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 19,\n   "id": "e7abee9a",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "\'temp-link-safe\' -> \'/tmp/tmp\'\\n"\n ]\n}\n   ],\n   "source": [\n"## SAFE SYMBOLIC LINK BUT FORCEFUL\\n",\n"link-symbolic-safe --force /tmp/tmp temp-link-safe"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 20,\n   "id": "3c388fb0",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "total 0\\n",\n  "-rw-rw-r-- \\n",\n  "lrwxrwxrwx -> file1\\n",\n  "lrwxrwxrwx ink -> /tmp\\n",\n  "lrwxrwxrwx ink-safe -> /tmp/tmp\\n"\n ]\n}\n   ],\n   "source": [\n"## REVIEWING ALL THE RESULTS IN THE DIRECTORY (RESULTS ARE FILTERED)| OLD: ls -l\\n",\n"ls -l | cut --characters=12-46 --complement"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 21,\n   "id": "8a363240",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "temp-link\\n",\n  "link1\\n",\n  "temp-link-safe\\n"\n ]\n}\n   ],\n   "source": [\n"#TO VIEW ALL THE SUBLINKS IN THE TESTING DIRECTORY\\n",\n"glob-links"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 22,\n   "id": "0dd2e74d",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "/tmp/test-dir-aliases/test-7919\\n",\n  "test-7919-b\\n",\n  "test-7919-a\\n"\n ]\n}\n   ],\n   "source": [\n"## TO VIEW SUBDIRECTORIES IN THE TESTING DIRECTORY\\n",\n"pwd\\n",\n"mkdir test-7919-a test-7919-b\\n",\n"glob-subdirs"\n   ]\n  }\n ],\n "metadata": {\n  "kernelspec": {\n   "display_name": "Bash",\n   "language": "bash",\n   "name": "bash"\n  },\n  "language_info": {\n   "codemirror_mode": "shell",\n   "file_extension": ".sh",\n   "mimetype": "text/x-sh",\n   "name": "bash"\n  }\n },\n "nbformat": 4,\n "nbformat_minor": 5\n}'
}
