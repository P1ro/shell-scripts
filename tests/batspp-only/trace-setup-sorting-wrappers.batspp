## TEST:  Make sure simple prompt used (e.g., no escapes that might contaminate output)
## PS1="$ "
## TODO: PS1="> "
## NOTE: The Jupyter bash kernel requires that PS1 not be modified as they customize it. 
$ echo $PS1
[PEXP\[\]ECT_PROMPT>

# Delete all aliases and function
# TODO: Instead start from pristine environment
$ unalias -a
$ alias | wc -l
$ for f in $(typeset -f | egrep '^\w+'); do unset -f $f; done
$ typeset -f | egrep '^\w+' | wc -l
0
0

# Setting a temp directory for tests
$ TMP=/tmp/test-setupsort
## NOTE: Source it directly from the ./tests directory.
$ BIN_DIR=$PWD/..
$ alias | wc -l
0

## NOTE: For reproducability, the directory name needs to be fixed
## In place of $$, use a psuedo random number (e,g., 6411)
## *** All output from one run to the next needs to be the same ***
## temp_dir=$TMP/test-$$
$ temp_dir=$TMP/test-6411
$ mkdir -p "$temp_dir"
# TODO: /bin/rm -rvf "$temp_dir"
$ cd "$temp_dir"
$ pwd
#ALIAS FOR PRINTING SEPERATION LINES (FOR JUPYTER)
$ alias linebr="printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -"
/tmp/test-setupsort/test-6411

# Count aliases proper
$ alias | wc -l
# Count functions
$ typeset -f | egrep '^\w+' | wc -l
1
0

$ alias testnum="sed -r "s/[0-9]/X/g"" 
$ alias testuser="sed -r "s/"$USER"+/user/g"" 

$ source $BIN_DIR/tomohara-aliases.bash

$ pwd | testuser
/tmp/test-setupsort/test-6411

# FOR SOME REASONS "cat bashrc-setup" COMMAND GIVES AN ERROR
# cat ~/.bashrc | tab-sort
# linebr
# cat ~/.bashrc | colon-sort
# linebr
# cat ~/.bashrc | colon-sort-rev-num
# linebr
# cat ~/.bashrc | freq-sort
# linebr
$ rm -rf ./* > /dev/null
$ man printf > pf_manual.txt
$ cat pf_manual.txt | tab-sort | testnum | testuser
































              $'' syntax.
       \a     alert (BEL)
       and all C format specifications ending with one of diouxXfeEgGcs,  with
       ARGUMENTs converted to proper type first.  Variable widths are handled.
       %%     a single %
AUTHOR
       \\     backslash
       %b     ARGUMENT  as  a string with '\' escapes interpreted, except that
       \b     backspace
COPYRIGHT
       Copyright  ©  XXXX  Free Software Foundation, Inc.  License GPLvX+: GNU
       \c     produce no further output
DESCRIPTION
       \"     double quote
       \e     escape
       \f     form feed
       FORMAT controls the output as in C printf.  Interpreted sequences are:
       Full documentation <https://www.gnu.org/software/coreutils/printf>
GNU coreutils X.XX               February XXXX                       PRINTF(X)
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       GPL version X or later <https://gnu.org/licenses/gpl.html>.
       --help display this help and exit
NAME
       \n     new line
       \NNN   byte with octal value NNN (X to X digits)
       NOTE:  your shell may have its own version of printf, which usually su‐
              octal escapes are of the form \X or \XNNN
       or available locally via: info '(coreutils) printf invocation'
              output version information and exit
       persedes the version described here.  Please refer to your shell's doc‐
       Print ARGUMENT(s) according to FORMAT, or execute according to OPTION:
PRINTF(X)                        User Commands                       PRINTF(X)
       printf(X)
       printf - format and print data
       printf FORMAT [ARGUMENT]...
       printf OPTION
              put,  escaping  non-printable characters with the proposed POSIX
       %q     ARGUMENT is printed in a format that can be reused as shell  in‐
       \r     carriage return
       Report any translation bugs to <https://translationproject.org/team/>
REPORTING BUGS
SEE ALSO
SYNOPSIS
       There is NO WARRANTY, to the extent permitted by law.
       This is free software: you are free  to  change  and  redistribute  it.
       \t     horizontal tab
       \UHHHHHHHH
       \uHHHH Unicode (ISO/IEC XXXXX) character with hex value HHHH (X digits)
       umentation for details about the options it supports.
              Unicode character with hex value HHHHHHHH (X digits)
       --version
       \v     vertical tab
       Written by David MacKenzie.
       \xHH   byte with hexadecimal value HH (X to X digits)

$ cat pf_manual.txt | colon-sort | testnum | testuser
































              $'' syntax.
       \a     alert (BEL)
       and all C format specifications ending with one of diouxXfeEgGcs,  with
       ARGUMENTs converted to proper type first.  Variable widths are handled.
       %%     a single %
AUTHOR
       \\     backslash
       %b     ARGUMENT  as  a string with '\' escapes interpreted, except that
       \b     backspace
COPYRIGHT
       \c     produce no further output
DESCRIPTION
       \"     double quote
       \e     escape
       \f     form feed
       FORMAT controls the output as in C printf.  Interpreted sequences are:
GNU coreutils X.XX               February XXXX                       PRINTF(X)
       --help display this help and exit
NAME
       \n     new line
       \NNN   byte with octal value NNN (X to X digits)
              octal escapes are of the form \X or \XNNN
              output version information and exit
       persedes the version described here.  Please refer to your shell's doc‐
       Print ARGUMENT(s) according to FORMAT, or execute according to OPTION:
PRINTF(X)                        User Commands                       PRINTF(X)
       printf(X)
       printf - format and print data
       printf FORMAT [ARGUMENT]...
       printf OPTION
              put,  escaping  non-printable characters with the proposed POSIX
       %q     ARGUMENT is printed in a format that can be reused as shell  in‐
       \r     carriage return
REPORTING BUGS
SEE ALSO
SYNOPSIS
       There is NO WARRANTY, to the extent permitted by law.
       \t     horizontal tab
       \UHHHHHHHH
       \uHHHH Unicode (ISO/IEC XXXXX) character with hex value HHHH (X digits)
       umentation for details about the options it supports.
              Unicode character with hex value HHHHHHHH (X digits)
       --version
       \v     vertical tab
       Written by David MacKenzie.
       \xHH   byte with hexadecimal value HH (X to X digits)
       Copyright  ©  XXXX  Free Software Foundation, Inc.  License GPLvX+: GNU
       GPL version X or later <https://gnu.org/licenses/gpl.html>.
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       or available locally via: info '(coreutils) printf invocation'
       Report any translation bugs to <https://translationproject.org/team/>
       Full documentation <https://www.gnu.org/software/coreutils/printf>
       This is free software: you are free  to  change  and  redistribute  it.
       NOTE:  your shell may have its own version of printf, which usually su‐

$ cat pf_manual.txt | colon-sort-rev-num | testnum | testuser
       \xHH   byte with hexadecimal value HH (X to X digits)
       Written by David MacKenzie.
       \v     vertical tab
       --version
              Unicode character with hex value HHHHHHHH (X digits)
       umentation for details about the options it supports.
       \uHHHH Unicode (ISO/IEC XXXXX) character with hex value HHHH (X digits)
       \UHHHHHHHH
       \t     horizontal tab
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.
SYNOPSIS
SEE ALSO
REPORTING BUGS
       Report any translation bugs to <https://translationproject.org/team/>
       \r     carriage return
       %q     ARGUMENT is printed in a format that can be reused as shell  in‐
              put,  escaping  non-printable characters with the proposed POSIX
       printf OPTION
       printf FORMAT [ARGUMENT]...
       printf - format and print data
       printf(X)
PRINTF(X)                        User Commands                       PRINTF(X)
       Print ARGUMENT(s) according to FORMAT, or execute according to OPTION:
       persedes the version described here.  Please refer to your shell's doc‐
              output version information and exit
       or available locally via: info '(coreutils) printf invocation'
              octal escapes are of the form \X or \XNNN
       NOTE:  your shell may have its own version of printf, which usually su‐
       \NNN   byte with octal value NNN (X to X digits)
       \n     new line
NAME
       --help display this help and exit
       GPL version X or later <https://gnu.org/licenses/gpl.html>.
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
GNU coreutils X.XX               February XXXX                       PRINTF(X)
       Full documentation <https://www.gnu.org/software/coreutils/printf>
       FORMAT controls the output as in C printf.  Interpreted sequences are:
       \f     form feed
       \e     escape
       \"     double quote
DESCRIPTION
       \c     produce no further output
       Copyright  ©  XXXX  Free Software Foundation, Inc.  License GPLvX+: GNU
COPYRIGHT
       \b     backspace
       %b     ARGUMENT  as  a string with '\' escapes interpreted, except that
       \\     backslash
AUTHOR
       %%     a single %
       ARGUMENTs converted to proper type first.  Variable widths are handled.
       and all C format specifications ending with one of diouxXfeEgGcs,  with
       \a     alert (BEL)
              $'' syntax.

































$ cat pf_manual.txt | freq-sort | testnum | testuser
       \xHH   byte with hexadecimal value HH (X to X digits)
       Written by David MacKenzie.
       \v     vertical tab
       --version
              Unicode character with hex value HHHHHHHH (X digits)
       umentation for details about the options it supports.
       \uHHHH Unicode (ISO/IEC XXXXX) character with hex value HHHH (X digits)
       \UHHHHHHHH
       \t     horizontal tab
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.
SYNOPSIS
SEE ALSO
REPORTING BUGS
       Report any translation bugs to <https://translationproject.org/team/>
       \r     carriage return
       %q     ARGUMENT is printed in a format that can be reused as shell  in‐
              put,  escaping  non-printable characters with the proposed POSIX
       printf OPTION
       printf FORMAT [ARGUMENT]...
       printf - format and print data
       printf(X)
PRINTF(X)                        User Commands                       PRINTF(X)
       Print ARGUMENT(s) according to FORMAT, or execute according to OPTION:
       persedes the version described here.  Please refer to your shell's doc‐
              output version information and exit
       or available locally via: info '(coreutils) printf invocation'
              octal escapes are of the form \X or \XNNN
       NOTE:  your shell may have its own version of printf, which usually su‐
       \NNN   byte with octal value NNN (X to X digits)
       \n     new line
NAME
       --help display this help and exit
       GPL version X or later <https://gnu.org/licenses/gpl.html>.
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
GNU coreutils X.XX               February XXXX                       PRINTF(X)
       Full documentation <https://www.gnu.org/software/coreutils/printf>
       FORMAT controls the output as in C printf.  Interpreted sequences are:
       \f     form feed
       \e     escape
       \"     double quote
DESCRIPTION
       \c     produce no further output
       Copyright  ©  XXXX  Free Software Foundation, Inc.  License GPLvX+: GNU
COPYRIGHT
       \b     backspace
       %b     ARGUMENT  as  a string with '\' escapes interpreted, except that
       \\     backslash
AUTHOR
       %%     a single %
       ARGUMENTs converted to proper type first.  Variable widths are handled.
       and all C format specifications ending with one of diouxXfeEgGcs,  with
       \a     alert (BEL)
              $'' syntax.

































# ECHOES THE FILE 
$ uname -r > linux-info.txt
$ cat linux-info.txt | echoize | testnum | testuser
# $ cat ~/.bashrc | echoize
X.XX.X-XX-generic

# SORTS BY PARAGRAPH
$ cat pf_manual.txt | para-sort | testnum | testuser
       %%     a single %


       %b     ARGUMENT  as  a string with '\' escapes interpreted, except that
              octal escapes are of the form \X or \XNNN


       %q     ARGUMENT is printed in a format that can be reused as shell  in‐
              put,  escaping  non-printable characters with the proposed POSIX
              $'' syntax.


       --help display this help and exit


       --version
              output version information and exit


       FORMAT controls the output as in C printf.  Interpreted sequences are:


       Full documentation <https://www.gnu.org/software/coreutils/printf>
       or available locally via: info '(coreutils) printf invocation'


       NOTE:  your shell may have its own version of printf, which usually su‐
       persedes the version described here.  Please refer to your shell's doc‐
       umentation for details about the options it supports.


       \"     double quote


       \NNN   byte with octal value NNN (X to X digits)


       \UHHHHHHHH
              Unicode character with hex value HHHHHHHH (X digits)


       \\     backslash


       \a     alert (BEL)


       \b     backspace


       \c     produce no further output


       \e     escape


       \f     form feed


       \n     new line


       \r     carriage return


       \t     horizontal tab


       \uHHHH Unicode (ISO/IEC XXXXX) character with hex value HHHH (X digits)


       \v     vertical tab


       \xHH   byte with hexadecimal value HH (X to X digits)


       and all C format specifications ending with one of diouxXfeEgGcs,  with
       ARGUMENTs converted to proper type first.  Variable widths are handled.


AUTHOR
       Written by David MacKenzie.


COPYRIGHT
       Copyright  ©  XXXX  Free Software Foundation, Inc.  License GPLvX+: GNU
       GPL version X or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.


DESCRIPTION
       Print ARGUMENT(s) according to FORMAT, or execute according to OPTION:


GNU coreutils X.XX               February XXXX                       PRINTF(X)

NAME
       printf - format and print data


PRINTF(X)                        User Commands                       PRINTF(X)


REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>


SEE ALSO
       printf(X)


SYNOPSIS
       printf FORMAT [ARGUMENT]...
       printf OPTION


$ cat pf_manual.txt | echoize | head -n 5 | testuser | testnum
PRINTF(X)                        User Commands                       PRINTF(X)

NAME        printf - format and print data

SYNOPSIS        printf FORMAT [ARGUMENT]...        printf OPTION
