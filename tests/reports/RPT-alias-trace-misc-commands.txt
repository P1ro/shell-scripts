#!/usr/bin/env bats


# Make executables ./tests/../ visible to PATH
PATH="/home/aveey/tom-project/shell-scripts/tests/../:$PATH"

# Source files
shopt -s expand_aliases
source /home/aveey/tom-project/shell-scripts/tests/alias-trace-misc-commands.ipynb || true


@test "test id286698" {
	testfolder=$(echo /tmp/test-id286698-$$)
	mkdir $testfolder && cd $testfolder
	actual=$(test-id286698-actual)
	expected=$(test-id286698-expected)
	echo "========== actual =========="
	echo "$actual" 
	echo "========= expected ========="
	echo "$expected" 
	echo "============================"
	[ "$actual" == "$expected" ]
}

function test-id286698-actual () {
	\ 2019  # Removes timestamp from history (e.g., \" 1972  [2014-05-02 14:34:12] dir *py\
}

function test-id286698-expected () {
	echo -e '\\" 1972  dir *py\\")\\n",\n" 2020  # TEST: function hist { h | perl -pe \'s/^(\\\\s*\\\\d+\\\\s*)(\\\\[[^\\\\]]+\\\\])(.*)/$1$3/;\'; }\\n",\n" 2021  # note: funciton used to simplify specification of quotes\\n",\n" 2022  # quiet-unalias h #COMMAND NOT FOUND\\n",\n" 2023  function h { hist | perl -pe \'s/^(\\\\s*\\\\d+\\\\s*)(\\\\[[^\\\\]]+\\\\])(.*)/$1$3/;\'; }\\n",\n" 2024  h\\n"\n     ]\n    }\n   ],\n   "source": [\n    "##2 SHOWS HISTORY WITHOUT TIMESTAMPS\\n",\n    "# Removes timestamp from history (e.g., \\" 1972  [2014-05-02 14:34:12] dir *py\\" => \\" 1972  dir *py\\")\\n",\n    "# TEST: function hist { h | perl -pe \'s/^(\\\\s*\\\\d+\\\\s*)(\\\\[[^\\\\]]+\\\\])(.*)/$1$3/;\'; }\\n",\n    "# note: funciton used to simplify specification of quotes\\n",\n    "\\n",\n    "# quiet-unalias h #COMMAND NOT FOUND\\n",\n    "function h { hist | perl -pe \'s/^(\\\\s*\\\\d+\\\\s*)(\\\\[[^\\\\]]+\\\\])(.*)/$1$3/;\'; }\\n",\n    "\\n",\n    "h"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 10,\n   "id": "ed1a5eb4",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"DDD MMM NN NN:NN:NN NNNN\\n"\n     ]\n    }\n   ],\n   "source": [\n    "##3 ASCTIME\\n",\n    "# EX: $ asctime | perl -pe \'s/\\\\d/N/g; s/\\\\w+ \\\\w+/DDD MMM/;\' => \\"DDD MMM NN NN:NN:NN NNNN\\"\\n",\n    "function asctime() { perl -e \\"print (scalar localtime($1));\\"; echo \\"\\"; }\\n",\n    "\\n",\n    "asctime | perl -pe \'s/\\\\d/N/g; s/\\\\w+ \\\\w+/DDD MMM/;\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 11,\n   "id": "f7c6a03a",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"    PID TTY          TIME CMD\\n",\n"   6936 pts/5    00:00:00 bash\\n",\n"   6973 pts/5    00:00:00 ps\\n",\n"   6974 pts/5    00:00:00 bash\\n",\n"   6975 pts/5    00:00:00 perl\\n"\n     ]\n    }\n   ],\n   "source": [\n    "##4 FILTER DIRECTORY NAMES\\n",\n    "# filter-dirnames: strip directory names from ps listing (TODO: rename as strip-dirnames)\\n",\n    "function filter-dirnames () { perl -pe \'s/\\\\/[^ \\\\\\"]+\\\\/([^ \\\\/\\\\\\"]+)/$1/g;\'; }\\n",\n    "\\n",\n    "ps | filter-dirnames"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 12,\n   "id": "0a69f15f",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"99,012,342,305,324,254\\n"\n     ]\n    }\n   ],\n   "source": [\n    "##5 COMMAIZE NUMBERS\\n",\n    "# comma-ize-number(): add commas to numbers in stdin\\n",\n    "# EX: echo \\"1234567890\\" | comma-ize-number => 1,234,567,890\\n",\n    "function comma-ize-number () { perl -pe \'while (/\\\\d\\\\d\\\\d\\\\d/) { s/(\\\\d)(\\\\d\\\\d\\\\d)([^\\\\d])/\\\\1,\\\\2\\\\3/g; } \'; }\\n",\n    "\\n",\n    "echo \\"99012342305324254\\" | comma-ize-number"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 13,\n   "id": "fd7d2c34",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"7.45G\\n"\n     ]\n    }\n   ],\n   "source": [\n    "##6 APPLYING NUMERIC SUFFIXES\\n",\n    "\\n",\n    "# apply-numeric-suffixes([once=0]): converts numbers in stdin to use K/M/G suffixes.\\n",\n    "# Notes:\\n",\n    "# - K, M, G and T based on powers of 1024.\\n",\n    "# - If $once non-zero, then the substitution is only applied one-time per line.\\n",\n    "# - The number must be preceded by a word boundary and followed by whitespace.\\n",\n    "# This was added in support of the usage function (e.g., numeric subdirectory names).\\n",\n    "# TODO:\\n",\n    "# - Convert to Perl script to avoid awkward bash command line construction.\\n",\n    "# - Make the trailing context a word-boundry as well (rather than whitespace).\\n",\n    "# EX: echo \\"1024 1572864 1073741824\\" | apply-numeric-suffixes => 1K 1.5M 1G\\n",\n    "# EX: echo \\"1024 1572864 1073741824\\" | apply-numeric-suffixes 1 => 1K 1572864 1073741824\\n",\n    "function apply-numeric-suffixes () {\\n",\n    "    local just_once=\\"$1\\"\\n",\n    "    local g=\\"g\\";\\n",\n    "    if [ \\"$just_once\\" = \\"1\\" ]; then g=\\"\\"; fi\\n",\n    "    # TODO: make only sure the first number is converted if just-once applies\\n",\n    "    # NOTE: 3 args to sprintf: coefficient, KMGT suffix, and post-context\\n",\n    "    ## DEBUG; perl -pe \'$suffixes=\\"_KMGT\\";  s@\\\\b(\\\\d{4,15})(\\\\s)@$pow = log($1)/log(1024);  $new_num=($1/1024**$pow);  $suffix=substr($suffixes, $pow, 1);  print STDERR (\\"s=$suffixes p=$pow nn=$new_num l=$suffix\\\\n\\"); sprintf(\\"%.3g%s%s\\", $new_num, $suffix, $2)@e\'\\"$g;\\"\\n",\n    "    perl -pe \'$suffixes=\\"_KMGT\\";  s@\\\\b(\\\\d{4,15})(\\\\s)@$pow = int(log($1)/log(1024));  $new_num=($1/1024**$pow);  $suffix=substr($suffixes, $pow, 1);  sprintf(\\"%.3g%s%s\\", $new_num, $suffix, $2)@e\'\\"$g;\\"\\n",\n    "}\\n",\n    "\\n",\n    "# TESTED COMMAND (if 1 KB ~ 1000 B; must return 7.XX GB (~ 8 GB) )\\n",\n    "echo \\"8000000000\\" | apply-numeric-suffixes"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 14,\n   "id": "d6e23378",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"7.45T\\n",\n"7.63G\\n"\n     ]\n    }\n   ],\n   "source": [\n    "##6.1 APPLYING USAGE NUMERIC SUFFIXES\\n",\n    "# apply-usage-numeric-suffixes(): factors in 1k blocksize before applying numeric suffixes\\n",\n    "# note: (?=\\\\s) is lookahead pattern (see perlre manpage)\\n",\n    "#\\n",\n    "function apply-usage-numeric-suffixes() {\\n",\n    "    perl -pe \'s@^(\\\\d+)(?=\\\\s)@$1 * 1024@e;\' | apply-numeric-suffixes 1\\n",\n    "}\\n",\n    "\\n",\n    "# IN SHORT = result * 1000\\n",\n    "echo \\"8000000000\\" | apply-usage-numeric-suffixes #G -> T\\n",\n    "echo \\"8000000\\" | apply-usage-numeric-suffixes #M -> G"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 15,\n   "id": "28d9cce7",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "#7 usage-pp\\n",\n    "function usage {\\n",\n    "    ## TODO: output_file=((\\"$1\\"||\\"usage.list\\"));\\n",\n    "    output_file=$(default_assignment \\"$1\\" \\"usage.list\\")\\n",\n    "    rename-with-file-date \\"$output_file\\";\\n",\n    "    $NICE du --block-size=1K --one-file-system 2>&1 | $NICE sort -rn | apply-usage-numeric-suffixes >| $output_file 2>&1;\\n",\n    "    $PAGER $output_file;\\n",\n    "}\\n",\n    "function usage-alt {\\n",\n    "    local output_file=$TEMP/$(basename $PWD)\\"-usage.list\\";\\n",\n    "    usage \\"$output_file\\"\\n",\n    "}\\n",\n    "\\n",\n    "function byte-usage () { output_file=\\"usage.bytes.list\\"; backup-file $output_file; $NICE du --bytes --one-file-system 2>&1 | $NICE sort -rn | apply-usage-numeric-suffixes >| $output_file 2>&1; $PAGER $output_file; }\\n",\n    "## TODO: function usage () { du --one-file-system --human-readable 2>&1 | sort -rn >| usage.list 2>&1; $PAGER usage.list; }\\n",\n    "\\n",\n    "#TODO: rework so that pp version saved in file\\n",\n    "alias usage-pp=\'usage | apply-usage-numeric-suffixes | $PAGER\'\\n",\n    "#"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 16,\n   "id": "95bda88c",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "# ERROR GENERATED- MULTIPLE\\n",\n    "# $ ups a > psa.txt\\n",\n    "# $ usage psa.txt\\n",\n    "# | bash: ups: command not found\\n",\n    "# | bash: default_assignment: command not found\\n",\n    "# | bash: rename-with-file-date: command not found\\n",\n    "# | bash: $output_file: ambiguous redirect\\n",\n    "# | sort: fflush failed: \'standard output\': Broken pipe\\n",\n    "# | sort: write error"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 17,\n   "id": "8227ef2a",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "#8 number-columns(file): number each column in first line of tabular file\\n",\n    "function number-columns () { head -1 \\"$1\\" | perl -0777 -pe \'$c = 1; s/^/1: /; s/\\\\t/\\"\\\\t\\" . ++$c . \\": \\"/eg;\'; }\\n",\n    "# TODO: s/\\\\t/\\\\\\\\t/g;\\n",\n    "function number-columns-comma () { head -1 \\"$1\\" | perl -pe \'s/,/\\\\t/g;\' | number-columns -; }\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 18,\n   "id": "db031306",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"1: THIS IS THE START\\n",\n"1: USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\\n"\n     ]\n    }\n   ],\n   "source": [\n    "#8.1) \\n",\n    "rm -rf ./*\\n",\n    "\\n",\n    "printf \\"THIS IS THE START\\\\nTHIS IS A TEST\\\\nTHIS IS A TEST\\\\nTHIS IS A TEST\\\\nTHIS IS A TEST\\\\nTHIS IS A TEST\\\\nTHIS IS THE END\\\\n\\" > thisisatest.txt\\n",\n    "ps aux > process.txt\\n",\n    "\\n",\n    "number-columns thisisatest.txt\\n",\n    "number-columns-comma process.txt"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 19,\n   "id": "ae8977b2",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"THIS IS THE START\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS THE END\\n",\n"--------------------------------------------------------------------------------\\n",\n"THIS IS THE END\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS A TEST\\n",\n"THIS IS THE START\\n"\n     ]\n    }\n   ],\n   "source": [\n    "#9) reverse REVERSES cat COMMAND\\n",\n    "# alias type=\'cat\'  # interferes with type command\\n",\n    "alias reverse=\'tac\'\\n",\n    "cat thisisatest.txt\\n",\n    "linebr\\n",\n    "reverse thisisatest.txt"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 20,\n   "id": "79f774a2",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "#10) backup-file\\n",\n    "function backup-file () { local file=\\"$1\\"; if [ -e \\"$file\\" ]; then dobackup.sh \\"$file\\"; fi; }\\n",\n    "## TODO: output header (e.g., \\"num-blocks<TAB>dir    # note: blocksize is 1k\\")\\n",\n    "#"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 21,\n   "id": "29a5af6d",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"Backing up \'thisisatest.txt\' to \'./backup/thisisatest.txt\'\\n"\n     ]\n    }\n   ],\n   "source": [\n    "# ERROR - NEED A CHANGE OF PATH (TBF) ==solved==\\n",\n    "backup-file thisisatest.txt\\n",\n    "# bash: /home/aveey/bin/dobackup.sh: /bin/csh: bad interpreter: No such file or directory"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 22,\n   "id": "fb4b42e0",\n   "metadata": {\n    "scrolled": true\n   },\n   "outputs": [],\n   "source": [\n    "function byte-usage () { output_file=\\"usage.bytes.list\\"; backup-file $output_file; $NICE du --bytes --one-file-system 2>&1 | $NICE sort -rn | apply-usage-numeric-suffixes >| $output_file 2>&1; $PAGER $output_file; }\\n",\n    "## TODO: function usage () { du --one-file-system --human-readable 2>&1 | sort -rn >| usage.list 2>&1; $PAGER usage.list; }\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 23,\n   "id": "a8c89aa1",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"36.2M\\t.\\n",\n"4.11M\\t./backup\\n"\n     ]\n    }\n   ],\n   "source": [\n    "# ERROR - NEED CHANGE OF PATH (TBF) ==solved==\\n",\n    "\\n",\n    "byte-usage process.txt\\n",\n    "# | bash: /home/aveey/bin/dobackup.sh: /bin/csh: bad interpreter: No such file or directory\\n",\n    "# | 30.4M\\t.\\n",\n    "\\n",\n    "\\n",\n    "# (Same output for \'byte-usage \\"Hi Mom\\"\' and \'byte-usage thisisatest.txt\')\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 24,\n   "id": "3e01b873",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "# check[all-]-(errors|warnings): check for known errors, with the check-all\\n",\n    "# variant including more patterns and with warnings subsuming errors.\\n",\n    "## OLD:\\n",\n    "## function check-errors () { (check_errors.perl -context=5 \\"$@\\") 2>&1 | $PAGER; }\\n",\n    "## function check-all-errors () { (check_errors.perl -warnings -relaxed -context=5 \\"$@\\") 2>&1 | $PAGER; }\\n",\n    "function check-errors () { (DEBUG_LEVEL=1 check_errors.perl -context=5 \\"$@\\") 2>&1 | $PAGER; }\\n",\n    "function check-all-errors () { (DEBUG_LEVEL=1 check_errors.perl -warnings -relaxed -context=5 \\"$@\\") 2>&1 | $PAGER; }\\n",\n    "alias check-warnings=\'echo \\"*** Error: use check-all-errors instead ***\\"; echo \\"    check-all-errors\\"\'\\n",\n    "alias check-all-warnings=\'check-all-errors -strict\'\\n",\n    "#\\n",\n    "# check-errors-excerpt(log-file): show errors are start of log-file and at end if different\\n",\n    "function check-errors-excerpt () {\\n",\n    "    local base=\\"$TMP/check-errors-excerpt-$$\\"\\n",\n    "    local head=\\"$base.head\\"\\n",\n    "    local tail=\\"$base.tail\\"\\n",\n    "    check-errors \\"$@\\" | head >| $head;\\n",\n    "    cat \\"$head\\"\\n",\n    "    check-errors \\"$@\\" | tail >| $tail;\\n",\n    "    diff \\"$head\\" \\"$tail\\" >| /dev/null\\n",\n    "    if [ $? != 0 ]; then\\n",\n    "        echo \\"\\\\$?=$?\\"\\n",\n    "        cat \\"$tail\\";\\n",\n    "    fi\\n",\n    "}"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 25,\n   "id": "9f2bfe8c",\n   "metadata": {\n    "scrolled": true\n   },\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"process.txt\\n",\n"process.txt\\n",\n"--------------------------------------------------------------------------------\\n",\n"*** Error: use check-all-errors instead ***\\n",\n"    check-all-errors\\n",\n"--------------------------------------------------------------------------------\\n",\n"\\n",\n"usage: check_errors.perl [options]\\n",\n"\\n",\n"options = [-warnings] [-context=N] [-no_astericks] [-skip_ruby_lib] [-relaxed | -strict]\\n",\n"\\n",\n"ex: check_errors.perl whatever\\n",\n"\\n",\n"\\n",\n"Notes:\\n",\n"- The default context is 1\\n",\n"- Warnings are skipped by default\\n",\n"- Use -no_astericks if input uses ***\'s outside of error contexts\\n",\n"Use -relaxed to exclude special cases (e.g., xyz=\'error\')\\n",\n"\\n",\n"--------------------------------------------------------------------------------\\n",\n"process.txt\\n"\n     ]\n    }\n   ],\n   "source": [\n    "#11 - LOG FILES ARE REQUIRED FOR check-errors\\n",\n    "check-errors process.txt\\n",\n    "check-all-errors process.txt\\n",\n    "linebr\\n",\n    "check-warnings\\n",\n    "linebr\\n",\n    "check-all-warnings\\n",\n    "linebr\\n",\n    "check-errors-excerpt process.txt"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 26,\n   "id": "b39ba4ab",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "function tkdiff () { wish -f $BIN_DIR/tkdiff.tcl \\"$@\\" & }\\n",\n    "alias rdiff=\'rev_vdiff.sh\'\\n",\n    "alias tkdiff-=\'tkdiff -noopt\'\\n",\n    "function kdiff () { kdiff.sh \\"$@\\" & }\\n",\n    "alias vdiff=\'kdiff\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 27,\n   "id": "2957ef23",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "# # 12) rdiff, tkdiff, vdiff - ERROR IN COMMANDS (as shown)\\n",\n    "\\n",\n    "# $ rdiff process.txt psa.txt\\n",\n    "# $ linebr\\n",\n    "# $ tkdiff- process.txt psa.txt\\n",\n    "# $ linebr\\n",\n    "# $ vdiff process.txt \\n",\n    "\\n",\n    "# | Echo: Command not found.\\n",\n    "# | ???\\n",\n    "# | cvs: Command not found.\\n",\n    "# | \\n",\n    "# | echo: No match.\\n",\n    "# | echo: No match.\\n",\n    "# | issuing: tkdiff.tcl -r.-1 process.txt\\n",\n    "# | [1] 5609\\n",\n    "# | tkdiff.tcl: Command not found.\\n",\n    "# | --------------------------------------------------------------------------------\\n",\n    "# | bash: tkdiff: command not found\\n",\n    "# | --------------------------------------------------------------------------------\\n",\n    "# | [1] 5615\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 28,\n   "id": "1b8247d1",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "# ERRORS UPDATED \\n",\n    "\\n",\n    "# $ tkdiff process.txt psa.txt\\n",\n    "#   linebr\\n",\n    "#   vdiff process.txt psa.txt\\n",\n    "#   linebr\\n",\n    "#   rdiff process.txt \\n",\n    "#   linebr\\n",\n    "\\n",\n    "# | [1] 6322\\n",\n    "# | --------------------------------------------------------------------------------\\n",\n    "# | Error in startup script: couldn\'t read file \\"/home/aveey/tom-project/shell-scripts/tests/../tkdiff.tcl\\": no such file or directory\\n",\n    "# | [2] 6325\\n",\n    "# | [1]   Exit 1                  wish -f $BIN_DIR/tkdiff.tcl \\"$@\\"\\n",\n    "# | /home/aveey/bin/kdiff.sh: line 56: /kdiff-6325.log: Permission denied\\n",\n    "# | --------------------------------------------------------------------------------\\n",\n    "# | [2]+  Done                    kdiff.sh \\"$@\\"\\n",\n    "# | Echo: Command not found.\\n",\n    "# | ???\\n",\n    "# | cvs: Command not found.\\n",\n    "# | \\n",\n    "# | echo: No match.\\n",\n    "# | echo: No match.\\n",\n    "# | issuing: tkdiff.tcl -r.-1 process.txt\\n",\n    "# | [1] 6364\\n",\n    "# | tkdiff.tcl: Command not found.\\n",\n    "# | --------------------------------------------------------------------------------\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 29,\n   "id": "d5cf2239",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "# diff(): run diff command w/ --ignore-all-space (-w) and --ignore-space-change (-b)\\n",\n    "diff_options=\\"--ignore-space-change --ignore-blank-lines\\"\\n",\n    "alias diff=\'command diff $diff_options\'\\n",\n    "alias diff-default=\'command diff\'\\n",\n    "alias diff-ignore-spacing=\'diff --ignore-all-space\'\\n",\n    "#\\n",\n    "# do-diff(): wrapper into do_diff.sh, which allows for glob patterns of current vs target dirs\\n",\n    "alias do-diff=\'do_diff.sh\'\\n",\n    "#\\n",\n    "function diff-rev () {\\n",\n    "    local diff_program=\\"diff\\"\\n",\n    "    if [ \\"$1\\" = \\"--diff-prog\\" ]; then\\n",\n    "        diff_program=\\"$2\\"\\n",\n    "        shift 2\\n",\n    "    fi\\n",\n    "    local right_file=\\"$1\\"\\n",\n    "    local left_file=\\"$2\\"\\n",\n    "    ## OLD: if [ -d \\"$left_file\\" ]; then left_file=\\"$left_file/$right_file\\"; fi\\n",\n    "    if [ -d \\"$left_file\\" ]; then left_file=\\"$left_file\\"/$(basename \\"$right_file\\"); fi\\n",\n    "    # TODO: create helper for resolving one file relative to dir of another\\n",\n    "    ## BAD: if [ ! -e \\"$left_file\\" ]; then left_file=$(dirname \\"$right_file\\")/\\"$left_file\\"; fi\\n",\n    "    \\"$diff_program\\" \\"$left_file\\" \\"$right_file\\"\\n",\n    "}\\n",\n    "alias kdiff-rev=\'diff-rev --diff-prog kdiff\'\\n",\n    "alias diff-log-output=\'compare-log-output.sh\'\\n",\n    "alias vdiff-rev=kdiff-rev"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 32,\n   "id": "0c36d6d5",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"--------------------------------------------------------------------------------\\n",\n"54c54\\n",\n"< root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-mm_percpu_wq]\\n",\n"---\\n",\n"> root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-events]\\n",\n"192c192\\n",\n"< aveey       5362  0.1  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"---\\n",\n"> aveey       5362  0.0  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"210c210\\n",\n"< aveey       7064  0.0  0.0  12932  3544 pts/5    R+   21:39   0:00 ps -aux\\n",\n"---\\n",\n"> aveey       7065  0.0  0.0  12932  3556 pts/5    R+   21:40   0:00 ps -aux\\n"\n     ]\n    },\n    {\n     "ename": "",\n     "evalue": "1",\n     "output_type": "error",\n     "traceback": []\n    }\n   ],\n   "source": [\n    "# TESTING diff COMMANDS\\n",\n    "# rm -rf ./*\\n",\n    "logger -p local7.info \\"information message\\" > logger1.log\\n",\n    "logger -p local7.err \\"error message\\" > logger2.log\\n",\n    "linebr\\n",\n    "ps -aux > process1.txt\\n",\n    "ps -aux > process2.txt\\n",\n    "#1) diff\\n",\n    "diff process1.txt process2.txt #(DIFFERENTIATING PROCESSES FOR DIFFERENT INSTANCES)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 33,\n   "id": "169b9a64",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"54c54\\n",\n"< root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-mm_percpu_wq]\\n",\n"---\\n",\n"> root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-events]\\n",\n"192c192\\n",\n"< aveey       5362  0.1  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"---\\n",\n"> aveey       5362  0.0  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"210c210\\n",\n"< aveey       7064  0.0  0.0  12932  3544 pts/5    R+   21:39   0:00 ps -aux\\n",\n"---\\n",\n"> aveey       7065  0.0  0.0  12932  3556 pts/5    R+   21:40   0:00 ps -aux\\n"\n     ]\n    },\n    {\n     "ename": "",\n     "evalue": "1",\n     "output_type": "error",\n     "traceback": []\n    }\n   ],\n   "source": [\n    "#2) diff-default\\n",\n    "diff-default process1.txt process2.txt"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 34,\n   "id": "636168eb",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"54c54\\n",\n"< root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-mm_percpu_wq]\\n",\n"---\\n",\n"> root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-events]\\n",\n"192c192\\n",\n"< aveey       5362  0.1  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"---\\n",\n"> aveey       5362  0.0  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"210c210\\n",\n"< aveey       7064  0.0  0.0  12932  3544 pts/5    R+   21:39   0:00 ps -aux\\n",\n"---\\n",\n"> aveey       7065  0.0  0.0  12932  3556 pts/5    R+   21:40   0:00 ps -aux\\n"\n     ]\n    },\n    {\n     "ename": "",\n     "evalue": "1",\n     "output_type": "error",\n     "traceback": []\n    }\n   ],\n   "source": [\n    "#3) diff-ignore-spacing\\n",\n    "diff-ignore-spacing process1.txt process2.txt"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 35,\n   "id": "486aec7d",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"process1.txt vs. process2.txt\\n",\n"Differences: process1.txt process2.txt\\n",\n"-rw-rw-r-- 1 aveey aveey 28703 Aug 31 21:40 process1.txt\\n",\n"-rw-rw-r-- 1 aveey aveey 28697 Aug 31 21:40 process2.txt\\n",\n"54c54\\n",\n"< root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-mm_percpu_wq]\\n",\n"---\\n",\n"> root         108  0.0  0.0      0     0 ?        I    19:14   0:02 [kworker/1:1-events]\\n",\n"192c192\\n",\n"< aveey       5362  0.1  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"---\\n",\n"> aveey       5362  0.0  3.2 2448736 120172 ?      Sl   20:49   0:03 /snap/firefox/1775/usr/lib/firefox/firefox -contentproc -childID 10 -isForBrowser -prefsLen 33492 -prefMapSize 234399 -jsInitLen 247228 -parentBuildID 20220829231602 -appDir /snap/firefox/1775/usr/lib/firefox/browser 2158 true tab\\n",\n"210c210\\n",\n"< aveey       7064  0.0  0.0  12932  3544 pts/5    R+   21:39   0:00 ps -aux\\n",\n"---\\n",\n"> aveey       7065  0.0  0.0  12932  3556 pts/5    R+   21:40   0:00 ps -aux\\n",\n"------------------------------------------------------------------------\\n",\n"\\n"\n     ]\n    }\n   ],\n   "source": [\n    "#4) do-diff\\n",\n    "do-diff process1.txt process2.txt"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 36,\n   "id": "903ac57f",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"[1] 7077\\n",\n"/home/aveey/bin/kdiff.sh: line 56: /kdiff-7077.log: Permission denied\\n",\n"--------------------------------------------------------------------------------\\n",\n"[1]+  Done                    kdiff.sh \\"$@\\"\\n",\n"[1] 7081\\n"\n     ]\n    },\n    {\n     "ename": "",\n     "evalue": "1",\n     "output_type": "error",\n     "traceback": []\n    }\n   ],\n   "source": [\n    "#5) kdiff-rev & vdiff-rev PERFORM THE SAME TASK\\n",\n    "kdiff-rev process1.txt process2.txt\\n",\n    "linebr\\n",\n    "vdiff-rev process1.txt process2.txt"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 38,\n   "id": "cbe6782b",\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n"bash: completion: function `_completion_loader\' not found\\n"\n     ]\n    }\n   ],\n   "source": [\n    "# 6) diff-log-output\\n",\n    "\\n",\n    "# $ ls\\n",\n    "#   linebr\\n",\n    "#   diff-log-output logger1.log logger2.log\\n",\n    "\\n",\n    "# ERROR GENERATED TO BE FIXED\\n",\n    "\\n",\n    "# | logger1.log  logger2.log  process1.txt\\tprocess2.txt\\n",\n    "# | cp: cannot create regular file \'/_1_logger1.log\': Permission denied\\n",\n    "# | cp: cannot create regular file \'/_2_logger2.log\': Permission denied\\n",\n    "# | Can\'t open /_1_logger1.log: No such file or directory.\\n",\n    "# | Can\'t open /_2_logger2.log: No such file or directory.\\n",\n    "# | /home/aveey/bin/kdiff.sh: line 56: /kdiff-6888.log: Permission denied\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 39,\n   "id": "5886b9e4",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "# most-recent-backup(file): returns most recent backup for FILE in ./backup, accounting for revisions (e.g., extract_matches.perl.~4~)\\n",\n    "function most-recent-backup {\\n",\n    "    if [ \\"$1\\" = \\"\\" ]; then\\n",\n    "        echo \\"usage: most-recent-backup filename\\"\\n",\n    "        echo \\"use BACKUP_DIR=dir ... to override use of ./backup\\"\\n",\n    "        return\\n",\n    "    fi\\n",\n    "    local file=\\"$1\\";\\n",\n    "    local dir=\\"$BACKUP_DIR\\"; if [ \\"$dir\\" = \\"\\" ]; then dir=./backup; fi\\n",\n    "    ## TODO: $LS -t $dir/* | $EGREP \\"/$file(~|.~*)\\" | head -1;\\n",\n    "    $LS -t $dir/* | /bin/egrep \\"/$file(~|.~*)?\\" | head -1;\\n",\n    "}\\n",\n    "#\\n",\n    "# diff-backup(file): compare FILE vs. most recent backup\\n",\n    "function diff-backup-helper {\\n",\n    "    local diff=\\"$1\\"; local file=\\"$2\\"; \\n",\n    "    \\"$diff\\" $(most-recent-backup \\"$file\\") \\"$file\\";\\n",\n    "}\\n",\n    "alias diff-backup=\'diff-backup-helper diff\'\\n",\n    "alias kdiff-backup=\'diff-backup-helper kdiff\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 42,\n   "id": "aa4dfed3",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "most-recent-backup abc (#CALL IT A DAY)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": null,\n   "id": "ae4468ab",\n   "metadata": {},\n   "outputs": [],\n   "source": []\n  }\n ],\n "metadata": {\n  "kernelspec": {\n   "display_name": "Bash",\n   "language": "bash",\n   "name": "bash"\n  },\n  "language_info": {\n   "codemirror_mode": "shell",\n   "file_extension": ".sh",\n   "mimetype": "text/x-sh",\n   "name": "bash"\n  }\n },\n "nbformat": 4,\n "nbformat_minor": 5\n}'
}
