$ echo $PS1
[PEXP\[\]ECT_PROMPT>

# Delete all aliases and function
# TODO: Instead start from pristine environment
$ unalias -a
$ alias | wc -l
$ for f in $(typeset -f | egrep '^\w+'); do unset -f $f; done
$ typeset -f | egrep '^\w+' | wc -l
# Setting a temp directory for tests
$ TMP=/tmp/test-extensionless
$ BIN_DIR=$PWD/..
0
0

$ alias | wc -l
0

$ temp_dir=$TMP/test-3570
$ mkdir -p "$temp_dir"
$ cd "$temp_dir"
$ pwd
#ALIAS FOR PRINTING SEPERATION LINES (FOR JUPYTER)
$ alias linebr="printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -"
/tmp/test-extensionless/test-3570

# Count aliases proper
$ alias | wc -l
# Count functions
$ typeset -f | egrep '^\w+' | wc -l
1
0

## TESTS 1 - EXTENSIONLESS SHORTCUTS PT. 1
$ alias perl-=""
$ GREP='grep'
$ alias move='mv'
$ alias convert-termstrings='perl- convert_termstrings.perl'
$ alias do-rcsdiff='do_rcsdiff.sh'
$ alias dobackup='dobackup.sh'
$ alias kill-em='kill_em.sh'
$ alias kill-it='kill-em --pattern'

# # 1.1) NO EXAMPLES RN FOR kill-em and kill-it
# kill-em
# linebr
# kill-it
# # 1.2) TEST STOPS
# $ kill-em --pattern kcalc
# | pattern=/kcalc/
# | filter=/($)(^)/
# | OSTYPE: Undefined variable.

## 1.2) ERROR GENERATED - SCRIPT MISSING
# $ convert-termstrings
# | Can't open perl script "convert_termstrings.perl": No such file or directory

$ rm -rf ./*
$ printf "TOP\nTHIS IS A TEST\nBOTTOM" > test.txt
$ ls
$ dobackup test.txt
$ linebr
$ ls
test.txt
Backing up 'test.txt' to './backup/test.txt'
--------------------------------------------------------------------------------
backup	test.txt

$ function ps-mine- { ps-mine "$@" | filter-dirnames; }
$ alias ps_mine='ps-mine'
$ alias ps-mine-all='ps-mine --all'

## ERROR - ps-mine COMMAND NOT FOUND
# ps_mine

$ alias rename-files='perl- rename_files.perl'
$ alias rename_files='rename-files'
$ alias testwn='perl- testwn.perl'
$ alias perlgrep='perl- perlgrep.perl'
$ alias foreach='perl- foreach.perl'
$ alias rename-spaces='rename-files -q -global " " "_"'
$ alias rename-special-punct='rename-files -q -global -regex "[&\!\*?\(\)]" ""'
$ alias rename-quotes='rename-files -q -global "'"'"'" ""' 

$ rename-files

Usage: rename_files.perl [options] old-pattern new-pattern [file] ...\n
main options = [-q | -quick] [-f | -force] [-i | -ignore] [-global] [-regex]
other options = [-evalre] [-t | -test] [-para]
common options = [-verbose] [-help]

Example(s):

rename_files.perl rename_files ' - Shortcut' '' *Shortcut*

/home/aveey/bin/rename_files.perl rename-files -q -- '--' '-'


Notes:

-- Use -- for first argument if dashes occur in old-pattern.
-- By default only a single occurrence of the pattern is replaced.

- The -ignore option is with respect to old vs. new comparison).

# HELP REQUIRED FOR RCS FILES (TBC)
$ do-rcsdiff

usage: do_rcsdiff.sh [-v] [-c] [--brief] [-p file_pattern] [-f] file ...

examples:

do_rcsdiff.sh Makefile

do_rcsdiff.sh \* >| _rcs.diff 2>&1

do_rcsdiff.sh *.[ch] >| _rcs.diff 2>&1

NOTES:
- Patterns are relative to the RCS subdirectory
- The rcsdiff command lists the rcs file before the current one, as in:
      diff RCS-file file


$ uname -r > versionR.txt
$ uname -a > versionA.txta
$ uname -v > versionV.txt
$ uname -i > versionI.txt
$ uname > "version none.txt"
$ uname -ra > "version?.txt"
$ ps -aux > processlist.txt
$ cp ./versionR.txt ./versionR-1.txt
$ ls
 backup		   versionA.txta       versionR-1.txt   versionV.txt
 processlist.txt   versionI.txt        versionR.txt
 test.txt	  'version none.txt'  'version?.txt'

$ rename-files -q test.txt harry.txt
renaming "test.txt" to "harry.txt"

# # NEED HELP (TBC)
# $ testwn
# | Undefined subroutine &main::NO_OP called at /home/aveey/bin/common.perl line 2172.

$ perlgrep "bash" ./processlist.txt
aveey       2415  0.0  0.0  17612  2020 pts/0    Ss   17:40   0:00 bash
aveey       2440  0.0  0.1  17612  4936 pts/1    Ss+  17:40   0:00 bash
aveey       4508  0.0  1.6 691220 57836 ?        Ssl  17:50   0:03 /usr/bin/python3 -m bash_kernel -f /home/aveey/.local/share/jupyter/runtime/kernel-c9deb3b8-c656-45df-a2c2-d9f85ff318ab.json
aveey       4519  0.0  0.1  17480  4904 pts/3    Ss+  17:50   0:00 /usr/bin/bash --rcfile /usr/lib/python3/dist-packages/pexpect/bashrc.sh
aveey       5078  0.0  0.1  17668  5048 pts/4    Ss   17:54   0:00 bash
aveey       8448  0.0  0.1  17668  5376 pts/5    Ss+  18:21   0:00 bash
aveey      11222  0.0  1.7 691220 60556 ?        Ssl  21:10   0:01 /usr/bin/python3 -m bash_kernel -f /home/aveey/.local/share/jupyter/runtime/kernel-2576ed23-01a7-4571-b5e4-0db404e9a80a.json
aveey      11233  0.0  0.1  17540  5236 pts/6    Ss+  21:10   0:00 /usr/bin/bash --rcfile /usr/lib/python3/dist-packages/pexpect/bashrc.sh
aveey      13076  0.0  1.7 691220 60580 ?        Ssl  21:16   0:01 /usr/bin/python3 -m bash_kernel -f /home/aveey/.local/share/jupyter/runtime/kernel-438a7192-237e-490e-8ab2-2658035cc4dd.json
aveey      13087  0.0  0.1  17540  5408 pts/7    Ss+  21:16   0:00 /usr/bin/bash --rcfile /usr/lib/python3/dist-packages/pexpect/bashrc.sh
aveey      13405  0.0  0.1  17668  5808 pts/8    Ss   21:20   0:00 bash
aveey      22993  0.0  0.1  17664  5916 pts/9    Ss   21:55   0:00 bash
aveey      25810 22.0  1.7 691228 60764 ?        Ssl  22:02   0:01 /usr/bin/python3 -m bash_kernel -f /home/aveey/.local/share/jupyter/runtime/kernel-7d6eccc1-4db7-4f69-b592-329e0b2bcb25.json
aveey      25821  2.2  0.1  17540  5452 pts/2    Ss   22:03   0:00 /usr/bin/bash --rcfile /usr/lib/python3/dist-packages/pexpect/bashrc.sh

$ foreach "echo $f" *.txt

$ rename-spaces
renaming "version none.txt" to "version_none.txt"

$ rename-special-punct
renaming "version?.txt" to "version.txt"

$ ps -l > "process(L).md"
$ ps -u > "process(U).md"
$ ps -x > "process(X).md"
$ ps -al > 'process'all'.md'

$ alias move-duplicates='mkdir -p duplicates; move *\([0-9]\).* duplicates 2>&1 | $GREP -iv cannot.stat.*..No.such'
$ alias rename-parens='rename-files -global -regex "[\(\)]" "" *[\(\)]*'
$ alias rename-etc='rename-spaces; rename-quotes; rename-special-punct; move-duplicates'

# # NO OUTPUT - NEED FURTHER ATTENTION
# $ move-duplicates

$ rename-parens -v
renaming "process(L).md" to "processL.md"
renaming "process(U).md" to "processU.md"
renaming "process(X).md" to "processX.md"

$ rename-quotes -v
WARNING: Ignoring -quick mode as files specified

$ ls
backup	       processlist.txt	processX.md    version_none.txt  version.txt
harry.txt      processL.md	versionA.txta  versionR-1.txt	 versionV.txt
processall.md  processU.md	versionI.txt   versionR.txt

$ function move-versioned-files {
$     alias perl-grep='perl $BIN_DIR/perlgrep.perl'
$     alias dir-rw='dir -rw'
$     alias move='mv'
$     local ext_pattern='$1'
$     if [ '$ext_pattern' = '' ]; then ext_pattern='{list,log,txt}'; fi
$     local dir='$2'
$     if [ '$dir' = '' ]; then dir='versioned-files'; fi
$     mkdir -p '$dir';
$     local D='[-.]'
$     local file_list='$TEMP/_move-versioned-files-$$.list'
$     eval_middle='$(eval dir-rw *$D$ext_pattern[0-9]*  *$D*[0-9]*$D$ext_pattern  *$D$ext_pattern$D*[0-9][0-9]*   *$D*[0-9][0-9]*$D$ext_pattern  2>&1 | perl-grep -v "No such file" | perl -pe "s/(\S+\s+){6}\S+//;" | sort -u)'
$     move '$eval_middle' '$dir'
$ }
$ alias move-log-files='move-versioned-files "{log,debug}" "log-files"'
$ alias move-output-files='move-versioned-files "{csv,html,json,list,out,output,png,report,tsv,xml}" "output-files"'
$ alias move-adhoc-files='move-log-files; move-output-files'

$ man sudo > sudo_manual.out
$ man ansifilter > fakelog.log
$ ps -aux > process_all.html

# # HELP REQUIRED - TBF
# $ move-log-files
# | mv: cannot stat '$eval_middle': No such file or directory

# # HELP REQUIRED - TBF
# $ move-output-files
# | mv: cannot stat '$eval_middle': No such file or directory

$ function get-free-filename() {
$     local base="$1"
$     local sep="$2"
$     local L=1
$     local filename="$base"
$     while [ -e "$filename" ]; do
$         let L++
$         filename="$base$sep$L"
$     done;
$     echo "$filename"
$ }
$ function rename-with-file-date() {
$     local f new_f
$     local move_command="move"
$     if [ "$1" = "--copy" ]; then
$         move_command='command cp --interactive --verbose --preserve'
$         shift
$     fi
$     for f in "$@"; do
$         if [ -e "$f" ]; then
$            new_f=$(get-free-filename "$f".$(date --reference="$f" '+%d%b%y') ".")
$            eval "$move_command" "$f" "$new_f";
$         fi
$     done;
$ }
$ function copy-with-file-date { rename-with-file-date --copy "$@"; }

$ copy-with-file-date *.md
'processall.md' -> 'processall.md.09Oct22'
'processL.md' -> 'processL.md.09Oct22'
'processU.md' -> 'processU.md.09Oct22'
'processX.md' -> 'processX.md.09Oct22'

# Statistical helpers
$ alias bigrams='perl -sw $BIN_DIR/count_bigrams.perl -N=2'
$ alias unigrams='perl -sw $BIN_DIR/count_bigrams.perl -N=1'
$ alias word-count=unigrams

$ word-count ./versionV.txt
utc	1
n/a	1
26	1
aug	1
13:26:29	1
fri	1
#54-ubuntu	1
smp	1

$ bigrams ./version.txt
x86_64:x86_64	2
utc:2022	1
n/a:n/a	1
n/a:linux	1
fri:aug	1
#54-ubuntu:smp	1
26:13:26:29	1
smp:fri	1
13:26:29:utc	1
aug:26	1
linux:ins-15-3573-umate	1
2022:x86_64	1
5.15.0-48-generic:#54-ubuntu	1
ins-15-3573-umate:5.15.0-48-generic	1

$ lynx-dump-stdout () { lynx -width=512 -dump "$@"; }
$ lynx-dump () { 
$     local in_file="$1"
$     shift 1
$     local base=$(basename "$file" .html)
$     if [[ ("$out_file" = "" ) && (! "$1" =~ -*) ]]; then
$         local out_file="$1"
$     fi
$     if [ "$out_file" = "" ]; then out_file="$base.txt"; fi
$     lynx-dump-stdout "$@" "$file" > "$out_file" 2> "$out_file.log"
$     if [ -s "$out_file.log" ]; then
$         cat "$out_file.log"
$         delete-force "$out_file.log"
$     fi
$ }
$ if [ "$BAREBONES_HOST" = "1" ]; then export lynx_width=0; fi
$ alias lynx-html='lynx -force_html'

# # WORKS FINE - HALTS PROCESS
# $ lynx-html

$ lynx-dump-stdout | head
     [ [1]About Lynx-Dev | [2]Lynx-Dev Archives ]

About Lynx

   Lynx is a fully-featured World Wide Web (WWW) browser for users on Unix, VMS, and other platforms running cursor-addressable, character-cell terminals or emulators. That includes vt100 terminals, other character-cell displays, and vt100 emulators such as Kermit or Procomm running on PCs or Macs.

   For information on how to use Lynx see the [3]Lynx User's Guide, or the [4]Lynx help files.

Credits and Copyright


# # NEED HELP - N/A 
# $ lynx-dump lynx_text.txt

$ function setenv () { export $1="$2"; }
$ alias unsetenv='unset'
$ alias unexport='unset'

$ setenv MY_USERNAME aveey-temp
$ echo $MY_USERNAME
aveey-temp

$ unexport MY_USERNAME
$ echo $MY_USERNAME


$ echo "END"
END
