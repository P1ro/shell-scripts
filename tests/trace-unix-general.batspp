# Setup
$ bind 'set enable-bracketed-paste off'
$ echo "BIND ON!"

## TESTS START FROM LINE 2066 (tomohara-aliases.bash)
## Bracketed Paste is disabled to prevent characters after output
## Example: 
# $ echo 'Hi'
# | Hi?2004l

## TEST:  Make sure simple prompt used (e.g., no escapes that might contaminate output)
## PS1="$ "
## TODO: PS1="> "
## NOTE: The Jupyter bash kernel requires that PS1 not be modified as they customize it. 
$ echo $PS1
[PEXP\[\]ECT_PROMPT>

# Delete all aliases and function
# TODO: Instead start from pristine environment
$ unalias -a
$ alias | wc -l
$ for f in $(typeset -f | egrep '^\w+'); do unset -f $f; done
$ typeset -f | egrep '^\w+' | wc -l
0
0

# Setting a temp directory for tests
$ TMP=/tmp/test-unix
## NOTE: Source it directly from the ./tests directory.
$ BIN_DIR=$PWD/..
$ alias | wc -l
0

## NOTE: For reproducability, the directory name needs to be fixed
## In place of $$, use a psuedo random number (e,g., 3245)
## *** All output from one run to the next needs to be the same ***
## temp_dir=$TMP/test-$$
$ temp_dir=$TMP/test-3245
$ mkdir -p "$temp_dir"
# TODO: /bin/rm -rvf "$temp_dir"
$ cd "$temp_dir"
$ pwd
#ALIAS FOR PRINTING SEPERATION LINES (FOR JUPYTER)
$ alias linebr="printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -"
/tmp/test-unix/test-3245

# Count aliases proper
$ alias | wc -l
# Count functions
$ typeset -f | egrep '^\w+' | wc -l
1
0

# ps-all(pattern): show processes from all users matching PATTERN (or . in which case piped to less)
# TODO: have option to restrict to current user
$ function ps-all () { 
$     local pattern="$1";
$     local pager=cat;
$     if [ "$pattern" = "" ]; then 
$         pattern="."; 
$         pager=$PAGER
$     fi;
$     ps_mine.sh --all | $EGREP -i "((^USER)|($pattern))" | $pager;
$     }
$ alias ps-script='ps-all "\\bscript\\b" | $GREP -v "(gnome-session)"'
$ function ps-sort-once { ps_sort.perl -num_times=1 -by=time "$@" -; }
$ alias ps-sort-time='ps-sort-once -by=time'
$ alias ps-time=ps-sort-time
$ alias ps-sort-mem='ps-sort-once -by=mem '
$ alias ps-mem=ps-sort-mem

$ alias ps-script='ps-all "\\bscript\\b" | $GREP -v "(gnome-session)"'
$ function ps-sort-once { ps_sort.perl -num_times=1 -by=time "$@" -; }
$ alias ps-sort-time='ps-sort-once -by=time'
$ alias ps-time=ps-sort-time
$ alias ps-sort-mem='ps-sort-once -by=mem '
$ alias ps-mem=ps-sort-mem

# SORTS ALL PROCESS BY TIME
$ ps-sort-time
Error: bad sort field (time): using cpu
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
aveey       1625 11.5 11.9 3448500 439304 ?      Sl   20:32   9:53 /snap/firef
aveey       9008 11.5  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/py
aveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firef
aveey       8806  3.1  4.7 2516088 174328 ?      Sl   21:55   0:06 /snap/firef
aveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upwork
root         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xo
aveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firef
aveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firef
aveey       9018  1.0  0.1  11480  5564 pts/2    Ss   21:58   0:00 /usr/bin/ba
aveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firef
aveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upwork
aveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/py
aveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firef
aveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firef
aveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firef
aveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pc
aveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lx
aveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termi
root        7741  0.1  0.0      0     0 ?        I    21:30   0:02 [kworker/2:
root           1  0.0  0.3 166312 11684 ?        Ss   20:24   0:01 /sbin/init 
root           2  0.0  0.0      0     0 ?        S    20:24   0:00 [kthreadd]
root           3  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_gp]
root           4  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_par_gp
root           5  0.0  0.0      0     0 ?        I<   20:24   0:00 [netns]
root           7  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:
root           9  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:
root          10  0.0  0.0      0     0 ?        I<   20:24   0:00 [mm_percpu_
root          11  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_
root          12  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_
root          13  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/
root          14  0.0  0.0      0     0 ?        I    20:24   0:02 [rcu_sched]
root          15  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/
root          16  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injec
root          18  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/0]
root          19  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/1]
root          20  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injec
root          21  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/
root          22  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/

# ACTS THE SAME AS ps-sort-time
$ ps-time
Error: bad sort field (time): using cpu
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
aveey       9008 12.0  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/py
aveey       1625 11.5 12.0 3448500 443204 ?      Sl   20:32   9:53 /snap/firef
aveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firef
aveey       8806  3.2  4.7 2517112 174804 ?      Sl   21:55   0:06 /snap/firef
aveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upwork
root         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xo
aveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firef
aveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firef
aveey       9018  1.0  0.1  11480  5564 pts/2    Ss   21:58   0:00 /usr/bin/ba
aveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firef
aveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upwork
aveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/py
aveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firef
aveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firef
aveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firef
aveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pc
aveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lx
aveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termi
root        7741  0.1  0.0      0     0 ?        I    21:30   0:02 [kworker/2:
root           1  0.0  0.3 166312 11684 ?        Ss   20:24   0:01 /sbin/init 
root           2  0.0  0.0      0     0 ?        S    20:24   0:00 [kthreadd]
root           3  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_gp]
root           4  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_par_gp
root           5  0.0  0.0      0     0 ?        I<   20:24   0:00 [netns]
root           7  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:
root           9  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:
root          10  0.0  0.0      0     0 ?        I<   20:24   0:00 [mm_percpu_
root          11  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_
root          12  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_
root          13  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/
root          14  0.0  0.0      0     0 ?        I    20:24   0:02 [rcu_sched]
root          15  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/
root          16  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injec
root          18  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/0]
root          19  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/1]
root          20  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injec
root          21  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/
root          22  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/

# SORTS ALL PROCESS BY MEMORY
$ ps-sort-mem
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
aveey       1625 11.5 11.9 3448500 442036 ?      Sl   20:32   9:54 /snap/firef
aveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firef
aveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upwork
aveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firef
aveey       8806  3.2  4.7 2518136 176668 ?      Sl   21:55   0:06 /snap/firef
aveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upwork
aveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firef
aveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firef
aveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pc
aveey       1834  0.0  3.0 2441784 112980 ?      Sl   20:33   0:02 /snap/firef
root         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xo
aveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lx
aveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termi
aveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/py
aveey       1438  0.0  1.9 290432 71944 ?        Sl   20:28   0:04 /opt/Upwork
aveey       8774  0.0  1.9 2414152 73396 ?       Sl   21:54   0:00 /snap/firef
aveey       1510  0.0  1.8 4505372 68944 ?       Sl   20:29   0:00 /opt/Upwork
aveey       1525  0.0  1.8 4503324 67324 ?       Sl   20:29   0:00 /opt/Upwork
aveey       1536  0.0  1.7 4502300 66016 ?       Sl   20:29   0:00 /opt/Upwork
aveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firef
aveey       1423  0.0  1.6 274864 59284 ?        Sl   20:28   0:03 /opt/Upwork
aveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firef
aveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firef
aveey       1495  0.0  1.4 522836 52640 ?        Sl   20:29   0:01 /opt/Upwork
aveey       9008 12.4  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/py
aveey       1047  0.0  1.3 576372 48780 ?        Sl   20:27   0:01 /usr/bin/lx
aveey       1192  0.0  1.2 503992 45232 ?        Sl   20:27   0:01 /usr/bin/lx
aveey       1388  0.0  1.2 207348 44972 ?        S    20:28   0:00 /opt/Upwork
aveey       1389  0.0  1.2 207348 45296 ?        S    20:28   0:00 /opt/Upwork
aveey       1044  0.0  1.1 275844 40868 ?        Sl   20:27   0:00 /usr/bin/lx
aveey        975  0.0  1.0 336624 38992 ?        Sl   20:27   0:01 lxqt-sessio
aveey       1042  0.0  1.0 336148 37608 ?        Sl   20:27   0:00 /usr/bin/lx
aveey       1046  0.0  1.0 409892 37412 ?        Sl   20:27   0:00 /usr/bin/lx
aveey       1194  0.0  1.0 271484 39280 ?        Sl   20:27   0:00 /usr/bin/ql
aveey       1196  0.0  1.0 272572 39152 ?        Sl   20:27   0:01 /usr/bin/nm
aveey       1764  0.0  1.0 268144 37812 ?        Ssl  20:33   0:00 /usr/lib/x8
aveey       2537  0.0  1.0 336716 40344 ?        Sl   20:33   0:00 /snap/firef
aveey       1808  0.0  0.9 218724 36740 ?        Sl   20:33   0:00 /snap/firef

# ps-mem IS AN ALTERNATIVE OF ps-sort-mem
$ ps-mem
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
aveey       1625 11.5 12.0 3448500 443324 ?      Sl   20:32   9:54 /snap/firef
aveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firef
aveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upwork
aveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firef
aveey       8806  3.3  4.7 2519160 175056 ?      Sl   21:55   0:06 /snap/firef
aveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upwork
aveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firef
aveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firef
aveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pc
aveey       1834  0.0  3.0 2441784 112980 ?      Sl   20:33   0:02 /snap/firef
root         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xo
aveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lx
aveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termi
aveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/py
aveey       1438  0.0  1.9 290432 71944 ?        Sl   20:28   0:04 /opt/Upwork
aveey       8774  0.0  1.9 2414152 73396 ?       Sl   21:54   0:00 /snap/firef
aveey       1510  0.0  1.8 4505372 68944 ?       Sl   20:29   0:00 /opt/Upwork
aveey       1525  0.0  1.8 4503324 67324 ?       Sl   20:29   0:00 /opt/Upwork
aveey       1536  0.0  1.7 4502300 66016 ?       Sl   20:29   0:00 /opt/Upwork
aveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firef
aveey       1423  0.0  1.6 274864 59284 ?        Sl   20:28   0:03 /opt/Upwork
aveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firef
aveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firef
aveey       1495  0.0  1.4 522836 52640 ?        Sl   20:29   0:01 /opt/Upwork
aveey       9008 12.8  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/py
aveey       1047  0.0  1.3 576372 48780 ?        Sl   20:27   0:01 /usr/bin/lx
aveey       1192  0.0  1.2 503992 45232 ?        Sl   20:27   0:01 /usr/bin/lx
aveey       1388  0.0  1.2 207348 44972 ?        S    20:28   0:00 /opt/Upwork
aveey       1389  0.0  1.2 207348 45296 ?        S    20:28   0:00 /opt/Upwork
aveey       1044  0.0  1.1 275844 40868 ?        Sl   20:27   0:00 /usr/bin/lx
aveey        975  0.0  1.0 336624 38992 ?        Sl   20:27   0:01 lxqt-sessio
aveey       1042  0.0  1.0 336148 37608 ?        Sl   20:27   0:00 /usr/bin/lx
aveey       1046  0.0  1.0 409892 37412 ?        Sl   20:27   0:00 /usr/bin/lx
aveey       1194  0.0  1.0 271484 39280 ?        Sl   20:27   0:00 /usr/bin/ql
aveey       1196  0.0  1.0 272572 39152 ?        Sl   20:27   0:01 /usr/bin/nm
aveey       1764  0.0  1.0 268144 37812 ?        Ssl  20:33   0:00 /usr/lib/x8
aveey       2537  0.0  1.0 336716 40344 ?        Sl   20:33   0:00 /snap/firef
aveey       1808  0.0  0.9 218724 36740 ?        Sl   20:33   0:00 /snap/firef

# ERROR GENERATED FOR ps-script
# $ ps-script
# | bash: -v: command not found
# | bash: -i: command not found
# | /usr/bin/env: ‘csh’: No such file or directory

# ERROR GENERATED FOR ps-all
# $ ps-all
# | /usr/bin/env: ‘csh’: No such file or directory
# | bash: -i: command not found

$ function get-process-parent() { local pid="$1"; if [ "$pid" = "" ]; then pid=$$; fi; ps al | perl -Ssw extract_matches.perl "^\d+\s+\d+\s+$pid\s+(\d+)"; }

$ ps al | egrep "(PID|$$)"
$ linebr
# get-process-parent : return parent process-id for PID
$ get-process-parent
F   UID     PID    PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND
0  1000    9018    9008  20   0  11480  5564 do_wai Ss   pts/2      0:00 /usr/bin/bash --rcfile /usr/lib/python3/dist-packages/pexpect/bashrc.sh
4  1000    9073    9018  20   0  12668  1572 -      R+   pts/2      0:00 ps al
0  1000    9074    9018  20   0   9076  2304 pipe_r S+   pts/2      0:00 grep -E (PID|9018)
--------------------------------------------------------------------------------
9008

# Make sure script appends rather than overwrites.
# In addition, set SCRIPT_PID, so that set_xterm_title.bash can indicate within script.
# Also, appends $ to prompt symbol so that typescript prompt searchable with strings command
## HACK: set envionment for sake of set_xterm_title.bash (TODO check PPID for this)
## TODO: use stack for old_PS_symbol maintenance??? (also allows for recursive invocation, such as with '$ $ $')
## TODO: rename as my-script to avoid confusion
$ function script {
$     ## THIS FUNCTION IS BUGGY
$     ## Note: set_xterm_title.bash keeps track of titles for each process, so save copies of current ones
$     local save_full=$(set-xterm-title --print-full)
$     local save_icon=$(set-xterm-title --print-icon)
$     ## DEBUG: echo "save_full='$save_full'; save_icon='$save_icon'"
$     # Change prompt
$     local old_PS_symbol="$PS_symbol"
$     export SCRIPT_PID=$$
$     # Note: the prompt change is flakey
$     reset-prompt "$PS_symbol\$"
$     ## DEBUG: echo "script: 1. PS1='$PS1' old_PS_symbol='$old_PS_symbol' PS_symbol='$new_PS_symbol'"
$     # Change xterm title to match
$     set-title-to-current-dir
$     ## DEBUG: echo "script: 2. PS1='$PS1' old_PS_symbol='$old_PS_symbol' PS_symbol='$new_PS_symbol'"
$     # Run command
$     command script --append "$@"
$     # Restore prompt
$     unset SCRIPT_PID
$     reset-prompt "$old_PS_symbol"
$     ## DEBUG: echo "script: 3. PS1='$PS1' old_PS_symbol='$old_PS_symbol' PS_symbol='$new_PS_symbol'"
$     # Get rid of lingering 'script' in xterm title
$     ## DEBUG: echo "Restoring xterm title: full=$save_full save=$save_icon"
$     set-xterm-title "$save_full" "$save_icon"
$ }
$ alias script-update='script _update-$(T).log'

## ERROR - NEED TO SOURCE tomohara-aliases.bash FILE
# $ script-update
# | bash: T: command not found
#   bash: set-xterm-title: command not found
#   bash: set-xterm-title: command not found
#   bash: reset-prompt: command not found
#   bash: set-title-to-current-dir: command not found
#   Script started, output log file is '_update-.log'.

# ansi-filter(filename]: wrapper around ansifilter with stdio and stdout instead of files
# TODO: issue request for proper Unix stdin support (n.b., this function is much ado about nothing)
$ function ansi-filter {
$     local input_file="$1"
$     if [ "$input_file" = "" ]; then
$         input_file="$TMP/ansi-filter-in-$$.list"
$         cat > "$input_file"
$     fi
$     local output_file="$TMP/ansi-filter-out-$$.list";
$     ansifilter --input="$input_file" --output="$output_file"
$     cat "$output_file"
$ }

## EXAMPLE FOR ansi-filter
# ERROR: COMMAND NOT FOUND
# $ echo "How to use the ansi-filter?" > ansi-filter-test.txt
# $ ansi-filter ansi-filter-test.txt
# | bash: ansifilter: command not found
# | cat: /tmp/test-unix/ansi-filter-out-7384.list: No such file or directory

# pause-for-enter: EXITS AFTER PRESSING ENTER, WITH A MESSAGE
$ function pause-for-enter () {
$     local message="$1"
$     if [ "$message" = "" ]; then message="Press enter to continue"; fi
$     read -p "$message "
$ }

## DOESN'T WORK FOR JUPYTER, WORKS FOR TERMINAL
# $ pause-for-enter
# | Press enter to continue 
## (program terminates after pressing Enter Key)
