## Bracketed Paste is disabled to prevent characters after output
## Example: 
# $ echo 'Hii'
# | Hi?2004l
$ bind 'set enable-bracketed-paste off'
[?2004h[?2004l[?2004l[?2004l[?2004l[?2004l

## TEST:  Make sure simple prompt used (e.g., no escapes that might contaminate output)
## PS1="$ "
## TODO: PS1="> "
## NOTE: The Jupyter bash kernel requires that PS1 not be modified as they customize it. 
$ echo $PS1
[PEXP\[\]ECT_PROMPT>

# Delete all aliases and function
# TODO: Instead start from pristine environment
$ unalias -a
$ alias | wc -l
$ for f in $(typeset -f | egrep '^\w+'); do unset -f $f; done
$ typeset -f | egrep '^\w+' | wc -l
0
0

# Setting a temp directory for tests
$ TMP=/tmp/test-cp-mv
## NOTE: Source it directly from the ./tests directory.
$ BIN_DIR=$PWD/..
## You will need to run jupyter from that directory.
## source $TEMP_BIN/_dir-aliases.bash
$ source _dir-aliases.bash
$ alias | wc -l
8

## NOTE: For reproducability, the directory name needs to be fixed
## In place of $$, use a psuedo random number (e,g., 6869)
## *** All output from one run to the next needs to be the same ***
## temp_dir=$TMP/test-$$
$ temp_dir=$TMP/test-6869
$ mkdir -p "$temp_dir"
# TODO: /bin/rm -rvf "$temp_dir"
$ cd "$temp_dir"
$ pwd
#ALIAS FOR PRINTING SEPERATION LINES (FOR JUPYTER)
$ alias linebr="printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -"
/tmp/test-cp-mv/test-6869

# Count aliases proper
$ alias | wc -l
9

# Count functions
$ typeset -f | egrep '^\w+' | wc -l
2

# # Command overrides for cd, etc. that set the xterm title to the current directory
# # TODO: use alias's instead so that the same name can be used as the command
# # NOTES: 
# #
# # - (from bash manual)  There is no mechanism for using arguments in
# # the replacement text, as in csh. If arguments are needed, a shell
# # function should be used.
# #
# # This is conditioned upon not running under emacs, so that the escape
# # sequence doesn't end up in the buffer.
# #
# if [ "$UNDER_EMACS" != "1" ]; then
#     function cd () { builtin cd "$@"; set-title-to-current-dir; }
#     function pushd () { builtin pushd "$@"; set-title-to-current-dir; }
#     function popd () { builtin popd; set-title-to-current-dir; }
# fi

$ alias chdir='cd'
# cd-realdir(dir): change into the real path for DIR
# cd-this-realdir: ditto for current directory
## OLD: function cd-realdir { local dir="$1";  if [ "$dir" = "" ]; then dir=.; fi;  cd $(realpath "$dir"); }
$ function cd-realdir {
$     local dir="$1";
$     if [ "$dir" = "" ]; then dir=.; fi;
$     cd "$(realpath "$dir")";
$     pwd;
$ }
$ alias cd-this-realdir='cd-realdir .'

# pushd-q, popd-q: quiet versions of pushd and popd
#
$ function pushd-q () { builtin pushd "$@" >| /dev/null; }
$ function popd-q () { builtin popd >| /dev/null; }
#

# SHOWS CURRENT WORKING DIRECTORY
$ pwd
/tmp/test-cp-mv/test-6869

## chdir works as cd
$ chdir ..
$ pwd
$ chdir test-6869/
$ pwd
$ linebr
## cd-this-realdir works as cd as well
$ chdir ..
$ pwd
$ chdir test-6869/
$ pwd
/tmp/test-cp-mv
/tmp/test-cp-mv/test-6869
--------------------------------------------------------------------------------
/tmp/test-cp-mv
/tmp/test-cp-mv/test-6869
