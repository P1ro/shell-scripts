#!/usr/bin/env bats


# Make executables ./tests/../ visible to PATH
PATH="/home/aveey/tom-project/shell-scripts/tests/../:$PATH"

# Source files
shopt -s expand_aliases
source /home/aveey/tom-project/shell-scripts/tests/trace-python-commands.ipynb || true


@test "test id81570" {
	testfolder=$(echo /tmp/test-id81570-$$)
	mkdir $testfolder && cd $testfolder
	actual=$(test-id81570-actual)
	expected=$(test-id81570-expected)
	echo "========== actual =========="
	echo "$actual" 
	echo "========= expected ========="
	echo "$expected" 
	echo "============================"
	[ "$actual" == "$expected" ]
}

function test-id81570-actual () {
	\"# EX: mezcla-devel; which system.py | grep -i Mezcla-main
}

function test-id81570-expected () {
	echo -e '\\"\\"\\n",\n"# note: mezcla-devel should be stable version of mezcla-tom\\n",\n"## OLD: alias mezcla-devel=\'add-python-path $HOME/programs/python/mezcla-tom/mezcla\'\\n",\n"alias mezcla-devel=\'add-python-path $HOME/python/Mezcla/mezcla\'\\n",\n"alias mezcla-main=\'add-python-path $HOME/python/Mezcla-main/mezcla\'\\n",\n"alias mezcla-tom=\'add-python-path $HOME/python/Mezcla-tom/mezcla\'\\n",\n"# Add mezcla-devel unless another version in path\\n",\n"if [[ ! \\"$PATH\\" =~ mezcla ]]; then\\n",\n"    ## OLD: mezcla-devel\\n",\n"    ## TODO: echo \\"Warning: mezcla not in PATH\\"\\n",\n"    true\\n",\n"fi"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 9,\n   "id": "9117cb3e",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"## FUNCTIONS REQUIRED FOR SMOOTH RUNNING OF THE TESTS\\n",\n"function ps-all () { \\n",\n"    local pattern=\\"$1\\";\\n",\n"    local pager=cat;\\n",\n"    if [ \\"$pattern\\" = \\"\\" ]; then \\n",\n"        pattern=\\".\\"; \\n",\n"        pager=$PAGER\\n",\n"    fi;\\n",\n"    ps_mine.sh --all | $EGREP -i \\"((^USER)|($pattern))\\" | $pager;\\n",\n"    }\\n",\n"# Path settings\\n",\n"# TODO: define a function for removing duplicates from the PATH while\\n",\n"# preserving the order\\n",\n"function show-path-dir () { (echo \\"${1}:\\"; printenv \\"$1\\" | perl -pe \\"s/:/\\\\n/g;\\") | $PAGER; }\\n",\n"alias show-path=\'show-path-dir PATH\'\\n",\n"# append-path(path): appends PATH to environment variable unless already there\\n",\n"## TODO: function in-path { local path=$(tr \\":\\" \\"\\\\n\\" | $GREP \\"^$1$$\\"); return ($path != \\"\\"); }\\n",\n"# TODO: add force argument to ensure last (or first)\\n",\n"function append-path () { if [[ ! (($PATH =~ ^$1:) || ($PATH =~ :$1:) || ($PATH =~ :$1$)) ]]; then export PATH=\\"${PATH}:$1\\"; fi }\\n",\n"function prepend-path () { if [[ ! (($PATH =~ ^$1:) || ($PATH =~ :$1:) || ($PATH =~ :$1$)) ]]; then export PATH=\\"$1:${PATH}\\"; fi }\\n",\n"# TODO: rework append-/prepend-path and python variants via generic helper\\n",\n"function append-python-path () { export PYTHONPATH=${PYTHONPATH}:\\"$1\\"; }\\n",\n"function prepend-python-path () { export PYTHONPATH=\\"$1\\":${PYTHONPATH}; }\\n",\n" "\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 10,\n   "id": "7ec729df",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# add-python-path $temp_dir\\n",\n"add-python-path $temp_dir"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 11,\n   "id": "d37be781",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"alias ps-python-full=\'ps-all python\'\\n",\n"# note: excludes ipython and known system-related python scripts\\n",\n"alias ps-python=\'ps-python-full | $EGREP -iv \\"(screenlet|ipython|egrep|update-manager|software-properties|networkd-dispatcher)\\"\'\\n",\n"alias show-python-path=\'show-path-dir PYTHONPATH\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 12,\n   "id": "000a2cc1",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"## ERROR 1 - process ID list syntax error\\n",\n"\\n",\n"# $ ps-python-full\\n",\n"# | error: process ID list syntax error\\n",\n"# | \\n",\n"# | Usage:\\n",\n"# |  ps [options]\\n",\n"# | \\n",\n"# |  Try \'ps --help <simple|list|output|threads|misc|all>\'\\n",\n"# |   or \'ps --help <s|l|o|t|m|a>\'\\n",\n"# |  for additional help text.\\n",\n"# | \\n",\n"# | For more details see ps(1)."\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 13,\n   "id": "81224e9f",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"## ERROR 2 - bash : command not found and process ID list syntax error\\n",\n"# $ ps-python\\n",\n"# | bash: -iv: command not found\\n",\n"# | error: process ID list syntax error\\n",\n"# | \\n",\n"# | Usage:\\n",\n"# |  ps [options]\\n",\n"# | \\n",\n"# |  Try \'ps --help <simple|list|output|threads|misc|all>\'\\n",\n"# |   or \'ps --help <s|l|o|t|m|a>\'\\n",\n"# |  for additional help text.\\n",\n"# | \\n",\n"# | For more details see ps(1).\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 14,\n   "id": "6c5b8d28",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "PYTHONPATH:\\n",\n  "/tmp/test-py-commands\\n",\n  "/home/aveey/python\\n",\n  "\\n"\n ]\n}\n   ],\n   "source": [\n"## show-python-path DISPLAYS ALL THE AVAILABLE PATHS OF PYTHON\\n",\n"show-python-path"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 15,\n   "id": "e09f0a5c",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# Python-lint filtering\\n",\n"# python-lint-full(filename): complete output from pylint, with caret-based\\n",\n"# context indicators retained by substiting carriage return for newline.\\n",\n"# python-lint-work(filename): pylint with moderate filtering\\n",\n"# python-lint(filename): pylint with usual filtering\\n",\n"# TODO: specify exclusion types in pylint command line (e.g., invalid-name)\\n",\n"# example: \\"C:674, 0: Invalid constant name \\"term_freq\\" (invalid-name)\\"\\n",\n"# example: \\"run_ner.py:413:0: C0330: Wrong continued indentation (add 8 spaces).\\n",\n"#                   \'B-DATE\', \'I-DATE\', \'B-DOCTOR\', \'I-DOCTOR\', \'B-LOCATION\', \'I-LOCATION\', \'B-AGE\', \'I-AGE\',\\n",\n"#                   ^       | (bad-continuation)\\n",\n"# TODO: make Mercurial root-to-python-path hack optional\\n",\n"# TODO: add similar aliases for pep8 and pyflakes\\n",\n"# TODO: handle continutations of statements without indentation:\\n",\n"#   ner_eval/ner_detokenize.py:11:45: C0326: Exactly one space required after comma\\n",\n"#   parser.add_argument(\'--output_file\', type=str,  help=\'\')\\n",\n"#                                      ^ (bad-whitespace)\\n",\n"\\n",\n"function python-lint-full() { \\n",\n"    local root=$(hg root 2> /dev/null);\\n",\n"    ## TODO: --persistent=n (to avoid caching)\\n",\n"    PYTHONPATH=\\"$root:.:$PYTHONPATH\\" $NICE pylint \\"$@\\" | perl -00 -ne \'while (/(\\\\n\\\\S+:\\\\s*\\\\d+[^\\\\n]+)\\\\n( +)/) { s/(\\\\n\\\\S+:\\\\s*\\\\d+[^\\\\n]+)\\\\n( +)/$1\\\\r$2/mg; } print(\\"$_\\");\' 2>&1 | $PAGER;\\n",\n"}"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 16,\n   "id": "644b54ae",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "************* Module batspp\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:378:0: R0022: Useless option value for \'disable\', \'no-self-use\' was moved to an optional extension, see https://pylint.pycqa.org/en/latest/whatsnew/2/2.14/summary.html#removed-checkers. (useless-option-value)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:13:0: C0301: Line too long (129/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:14:0: C0301: Line too long (188/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:20:0: C0301: Line too long (175/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:84:0: C0301: Line too long (101/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:115:0: C0301: Line too long (108/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:144:17: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:156:10: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:161:0: C0301: Line too long (108/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:189:0: C0301: Line too long (101/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:197:0: C0301: Line too long (113/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:203:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:211:0: C0301: Line too long (107/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:212:0: C0301: Line too long (104/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:219:0: C0325: Unnecessary parens after \'while\' keyword (superfluous-parens)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:222:0: C0301: Line too long (120/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:230:0: C0325: Unnecessary parens after \'if\' keyword (superfluous-parens)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:243:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:281:0: C0301: Line too long (107/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:290:0: C0301: Line too long (101/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:353:0: C0301: Line too long (101/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:358:0: C0301: Line too long (102/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:363:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:404:0: C0301: Line too long (128/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:412:0: C0301: Line too long (102/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:426:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:448:0: C0301: Line too long (103/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:453:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:463:0: C0301: Line too long (101/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:471:0: C0301: Line too long (113/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:480:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:497:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:516:0: C0301: Line too long (101/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:538:0: C0301: Line too long (111/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:544:0: C0301: Line too long (109/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:548:0: C0301: Line too long (110/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:565:0: C0301: Line too long (101/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:628:0: C0301: Line too long (107/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:629:0: C0301: Line too long (108/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:639:0: C0301: Line too long (103/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:672:0: C0301: Line too long (105/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:677:29: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:702:0: C0301: Line too long (121/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:706:90: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:734:0: C0301: Line too long (113/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:744:0: C0301: Line too long (116/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:776:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:790:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:814:0: C0301: Line too long (118/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:815:0: C0301: Line too long (133/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:818:0: C0301: Line too long (121/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:819:0: C0301: Line too long (103/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:826:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:838:0: C0301: Line too long (113/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:844:0: C0325: Unnecessary parens after \'if\' keyword (superfluous-parens)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:847:0: C0325: Unnecessary parens after \'if\' keyword (superfluous-parens)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:899:0: C0301: Line too long (109/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:903:0: C0325: Unnecessary parens after \'assert\' keyword (superfluous-parens)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:909:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:910:0: C0301: Line too long (108/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:919:0: C0303: Trailing whitespace (trailing-whitespace)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:928:0: C0301: Line too long (106/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:961:0: C0301: Line too long (112/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:983:0: C0301: Line too long (109/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:990:0: C0301: Line too long (104/100) (line-too-long)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:1:0: C0302: Too many lines in module (1035/1000) (too-many-lines)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:10:1: W0511: # TODO: (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:215:5: W0511: # TODO: new_contents = my_re.sub(r\\"^(.*[^\\\\\\\\])\\\\\\\\(\\\\n)$\\", r\\"\\\\1\\\\n\\", contents, flags=re.MULTILINE) (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:396:13: W0511: # TODO: INDENT_PATTERN += \\"[^#]\\" (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:411:13: W0511: TODO: allow for here-documents with comments and other special cases (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:422:13: W0511: TODO: sort combined set of tests based on file offset to make order more intuitive (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:450:13: W0511: # TODO: trailer =  r\'(?#trailer  )(?:# *End[^\\\\n]*\\\\n)\' (fixme)\\n"\n ]\n},\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:466:9: W0511: TODO: raise NotImplementedError() (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:499:9: W0511: TODO: make this optional for expected output field (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:575:9: W0511: # TODO: temp_dir = Main.temp_base (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:631:9: W0511: TODO: use an external file (as the @here might fail if the example uses << as well) (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:655:13: W0511: # TODO: self._setup_funct = None (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:672:73: W0511: TODO: fix (Bruno, what is for?) (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:673:73: W0511: TODO: fix (ditto) (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:771:13: W0511: # TODO: (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:784:9: W0511: # TODO: (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:857:5: W0511: # TODO: add examples to help clarify the regex (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:934:5: W0511: # TODO: add examples (e.g., to help distinguish regex from one for CommandTests) (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:990:9: W0511: TODO: use OO apprach (e.g., FunctionResult w/ assertion field versus CommandResult with setup) (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:1017:9: W0511: # TODO: example (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:1029:18: W0511: # TODO: use_temp_base_dir=True, (fixme)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:168:8: C0103: Variable name \\"s\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:181:8: C0103: Variable name \\"c\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:218:4: C0103: Variable name \\"s\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:229:12: C0103: Variable name \\"s\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:391:8: W0603: Using the global statement (global-statement)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:406:8: C0103: Variable name \\"JUST_COMMENTS\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:428:0: C0103: Constant name \\"_test_num\\" doesn\'t conform to UPPER_CASE naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:456:8: C0103: Constant name \\"_test_num\\" doesn\'t conform to UPPER_CASE naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:456:8: W0603: Using the global statement (global-statement)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:478:16: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:485:20: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:503:16: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:541:4: R0914: Too many local variables (29/15) (too-many-locals)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:555:25: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:594:28: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:541:4: R0912: Too many branches (14/12) (too-many-branches)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:541:4: R0915: Too many statements (61/50) (too-many-statements)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:690:22: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:692:22: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:695:22: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:705:4: R0914: Too many local variables (17/15) (too-many-locals)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:711:12: C0103: Variable name \\"p\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:714:8: C0103: Variable name \\"save_my_re_TRACE_LEVEL\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:716:8: C0103: Variable name \\"save_INDENT0\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:720:8: C0103: Variable name \\"p\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:744:67: E1101: Instance of \'regex_wrapper\' has no \'span\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:748:12: C0103: Variable name \\"p\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:755:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:755:16: C0103: Variable name \\"m\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:705:4: R1711: Useless return at end of function or method (useless-return)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:802:19: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:923:17: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:924:16: E1101: Instance of \'regex_wrapper\' has no \'sub\' member (no-member)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:966:12: C0103: Variable name \\"EQ\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "/home/aveey/tom-project/shell-scripts/tests/batspp.py:967:12: C0103: Variable name \\"NE\\" doesn\'t conform to snake_case naming style (invalid-name)\\n",\n  "\\n",\n  "------------------------------------------------------------------\\n",\n  "Your code has been rated at 6.17/10 (previous run: 6.17/10, +0.00)\\n",\n  "\\n"\n ]\n}\n   ],\n   "source": [\n"\\n",\n"# python-lint-full (scores the code on the basis of effectiveness)\\n",\n"python-lint-full $BIN_DIR/tests/batspp.py\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 17,\n   "id": "ff01fc98",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# Notes:\\n",\n"# - filters out context in addition to warning proper, as in following:\\n",\n"#    ex: C:244, 0: Exactly one space required after assignment\\n",\n"#    SKIP_ADS =  (IS_GI_JOB_SEARCH or system.getenv_bool(\\"SKIP_ADS\\", False))\\n",\n"#             ^ (bad-whitespace)\\n",\n"# - filters out other extraneous output\\n",\n"#   ex: Your code has been rated at 7.43/10 ...\\n",\n"#   ex: No config file found ...\\n",\n"# - the following has two regex: *modify the first* to add more conditions to ignore; the second is just for the extraneous pylint output\\n",\n"function python-lint-work() { python-lint-full \\"$@\\" 2>&1 | $EGREP -v \'\\\\((bad-continuation|bad-option-value|fixme|invalid-name|locally-disabled|too-few-public-methods|too-many-\\\\S+|trailing-whitespace|star-args|unnecessary-pass)\\\\)\' | $EGREP -v \'^(([A-Z]:[0-9]+)|(Your code has been rated)|(No config file found)|(\\\\-\\\\-\\\\-\\\\-\\\\-))\' | $PAGER; }\\n",\n"# TODO: rename as python-lint-tpo for clarity (and make python-lint as alias for it)\\n",\n"function python-lint() { python-lint-work \\"$@\\" 2>&1 | $EGREP -v \'(Exactly one space required)|\\\\((bad-continuation|bad-whitespace|bad-indentation|bare-except|c-extension-no-member|consider-using-enumerate|consider-using-with|global-statement|global-variable-not-assigned|keyword-arg-before-vararg|len-as-condition|line-too-long|logging-not-lazy|misplaced-comparison-constant|missing-final-newline|redefined-variable-type|redundant-keyword-arg|superfluous-parens|too-many-arguments|too-many-instance-attributes|trailing-newlines|useless-\\\\S+|wrong-import-order|wrong-import-position)\\\\)\' | $PAGER; }\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 18,\n   "id": "be24ab27",\n   "metadata": {\n"scrolled": true\n   },\n   "outputs": [],\n   "source": [\n"## ERROR GENERATED : -v COMMAND NOT FOUND\\n",\n"# $ python-lint-work $BIN_DIR/tests/batspp.py\\n",\n"# | bash: -v: command not found"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 19,\n   "id": "cab9db0c",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"## ERROR GENERATED : -v COMMAND NOT FOUND\\n",\n"# $ python-lint $BIN_DIR/tests/batspp.py\\n",\n"# | bash: -v: command not found"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 20,\n   "id": "afd7cee1",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# run-python-lint-batched([file_spec=\\"*.py\\"]: Run python-lint in batch mode over\\n",\n"# files in FILE_SPEC, placing results in pylint/<today>.\\n",\n"#\\n",\n"function get-python-lint-dir () {\\n",\n"    local python_version_major=$(pylint --version 2>&1 | extract_matches.perl \\"Python (\\\\d)\\")\\n",\n"    local affix=\\"py${python_version_major}\\"\\n",\n"    local out_dir=\\"_pylint/$(todays-date)-$affix\\"\\n",\n"    echo \\"$out_dir\\"\\n",\n"}\\n",\n"#\\n",\n"function run-python-lint-batched () {\\n",\n"    # TODO: support files with embedded spaces\\n",\n"    local file_spec=\\"$@\\"\\n",\n"    if [ \\"$file_spec\\" = \\"\\" ]; then file_spec=\\"*.py\\"; fi\\n",\n"\\n",\n"    # Create output directory if needed\\n",\n"    local out_dir=$(get-python-lint-dir)\\n",\n"    mkdir -p \\"$out_dir\\"\\n",\n"\\n",\n"    # Run pylint and pipe top section into less\\n",\n"    (for f in $($LS $file_spec); do\\n",\n"         # HACK: uses basename of parent prefix if invoked with path\\n",\n"         local b=$(basename \\"$f\\")\\n",\n"         local pre=\\"\\"\\n",\n"\\t # Note: uses directory name as prefix if file not in current dir\\n",\n"         if [[ $f =~ / ]]; then pre=\\"$(basename $(dirname \\"$f\\"))-\\"; fi\\n",\n"         DEBUG_LEVEL=5 python-lint \\"$f\\" >| \\"$out_dir/$pre$b\\".log 2>&1\\n",\n"         head \\"$out_dir/$pre$b\\".log\\n",\n"     done) >| \\"$out_dir/summary.log\\"\\n",\n"    less -p \'^\\\\** Module\' \\"$out_dir/summary.log\\";\\n",\n"}"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 21,\n   "id": "898ff12b",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# (REQUIRED BY run-python-lint-batched)\\n",\n"\\n",\n"function downcase-stdin { perl -pe \\"use open \':std\', \':encoding(UTF-8)\'; s/.*/\\\\L$&/;\\"; }\\n",\n"function downcase-text() { echo \\"$@\\" | downcase-stdin; }\\n",\n"# todays-date(): outputs date in format DDmmmYY (e.g., 22Apr20)\\n",\n"## OLD: function todays-date() { date \'+%d%b%y\' | perl -pe \'s/.*/\\\\L$&/;\'; }\\n",\n"## TODO: drop leading digits in day of month\\n",\n"## NOTE: keep in synch with common.perl get_file_ddmmmyy and .emacs edit-adhoc-notes-file\\n",\n"function todays-date() { date \'+%d%b%y\' | downcase-stdin; }\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 22,\n   "id": "207d98f0",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# ERROR: Pattern not found  (press RETURN)\\n",\n"# run-python-lint-batched ./print.py "\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 23,\n   "id": "3fccc7ab",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# python-import-path(module): find path for package directory of MODULE\\n",\n"# Note: this checks output via module initialization output shown with python -v\\n",\n"# ex: /usr/local/misc/programs/anaconda3/lib/python3.8/site-packages/sklearn/__pycache__/__init__.cpython-38.pyc matches /usr/local/misc/programs/anaconda3/lib/python3.8/site-packages/sklearn/__init__.py\\n",\n"\\n",\n"function python-import-path-all() { local module=\\"$1\\"; python -u -v -c \\"import $module\\" 2>&1; }\\n",\n"function python-import-path-full() { local module=\\"$1\\"; python-import-path-all \\"$@\\" | extract_matches.perl \\"((matches (.*\\\\W$module[^/]*[/\\\\.][^/]*))|ModuleNotFoundError)\\"; }\\n",\n"function python-import-path() { python-import-path-full \\"$@\\" | head -1; }\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 24,\n   "id": "61b87ac0",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "asttokens==2.0.5\\n",\n  "Babel==2.10.1\\n",\n  "backcall==0.2.0\\n",\n  "bash_kernel @ git+https://github.com/kdm9/bash_kernel.git@a4c81c9f35926b7625b11e4c016c5e67edac522f\\n",\n  "batspp @ file:///home/aveey/tom-project/shell-scripts/batspp\\n",\n  "brotlipy==0.7.0\\n",\n  "certifi==2021.10.8\\n",\n  "cffi @ file:///opt/conda/conda-bld/cffi_1642701102775/work\\n",\n  "charset-normalizer @ file:///tmp/build/80754af9/charset-normalizer_1630003229654/work\\n",\n  "click==8.1.3\\n",\n  "colorama @ file:///tmp/build/80754af9/colorama_1607707115595/work\\n",\n  "conda==4.12.0\\n",\n  "conda-content-trust @ file:///tmp/build/80754af9/conda-content-trust_1617045594566/work\\n",\n  "conda-package-handling @ file:///tmp/build/80754af9/conda-package-handling_1649105784853/work\\n",\n  "cryptography @ file:///tmp/build/80754af9/cryptography_1639414572950/work\\n",\n  "debugpy==1.6.0\\n",\n  "decorator==5.1.1\\n",\n  "entrypoints==0.4\\n",\n  "executing==0.8.3\\n",\n  "ExifRead==3.0.0\\n",\n  "filetype==1.0.13\\n",\n  "Flask==2.0.1\\n",\n  "idna @ file:///tmp/build/80754af9/idna_1637925883363/work\\n",\n  "importlib-metadata==4.11.4\\n",\n  "inifile==0.4.1\\n",\n  "ipykernel==6.15.0\\n",\n  "ipython==8.4.0\\n",\n  "itsdangerous==2.1.2\\n",\n  "jedi==0.18.1\\n",\n  "Jinja2==3.0.3\\n",\n  "jupyter-client==7.3.4\\n",\n  "jupyter-core==4.10.0\\n",\n  "Lektor==3.3.4\\n",\n  "MarkupSafe==2.1.1\\n",\n  "matplotlib-inline==0.1.3\\n",\n  "mezcla==1.3.0\\n",\n  "mistune==0.8.4\\n",\n  "nest-asyncio==1.5.5\\n",\n  "packaging==21.3\\n",\n  "parso==0.8.3\\n",\n  "pexpect==4.8.0\\n",\n  "pickleshare==0.7.5\\n",\n  "prompt-toolkit==3.0.30\\n",\n  "psutil==5.9.1\\n",\n  "ptyprocess==0.7.0\\n",\n  "pure-eval==0.2.2\\n",\n  "pycosat==0.6.3\\n",\n  "pycparser @ file:///tmp/build/80754af9/pycparser_1636541352034/work\\n",\n  "Pygments==2.12.0\\n",\n  "pyOpenSSL @ file:///opt/conda/conda-bld/pyopenssl_1643788558760/work\\n",\n  "pyparsing==3.0.9\\n",\n  "PySocks @ file:///tmp/build/80754af9/pysocks_1605305812635/work\\n",\n  "python-dateutil==2.8.2\\n",\n  "python-slugify==6.1.2\\n",\n  "pytz==2022.1\\n",\n  "pyzmq==23.2.0\\n",\n  "requests @ file:///opt/conda/conda-bld/requests_1641824580448/work\\n",\n  "ruamel-yaml-conda @ file:///tmp/build/80754af9/ruamel_yaml_1616016711199/work\\n",\n  "six @ file:///tmp/build/80754af9/six_1644875935023/work\\n",\n  "stack-data==0.3.0\\n",\n  "text-unidecode==1.3\\n",\n  "tornado==6.1\\n",\n  "tqdm @ file:///opt/conda/conda-bld/tqdm_1647339053476/work\\n",\n  "traitlets==5.3.0\\n",\n  "urllib3 @ file:///opt/conda/conda-bld/urllib3_1643638302206/work\\n",\n  "watchdog==2.1.8\\n",\n  "wcwidth==0.2.5\\n",\n  "Werkzeug==2.1.2\\n",\n  "zipp==3.8.0\\n"\n ]\n}\n   ],\n   "source": [\n"# RETURNS A LIST OF PYTHON MODULES\\n",\n"rm -rf ./*\\n",\n"pip3 freeze"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 25,\n   "id": "47052961",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "matches /home/aveey/miniconda3/lib/python3.9/site-packages/conda/__init__.py\\n",\n  "--------------------------------------------------------------------------------\\n",\n  "matches /home/aveey/miniconda3/lib/python3.9/site-packages/conda/__init__.py\\n",\n  "matches /home/aveey/miniconda3/lib/python3.9/site-packages/conda/common\\n",\n  "matches /home/aveey/miniconda3/lib/python3.9/site-packages/conda/common\\n",\n  "--------------------------------------------------------------------------------\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/__init__.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/encodings/__init__.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/__init__.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/codecs.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/codecs.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/codecs.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/aliases.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/encodings/aliases.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/aliases.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/utf_8.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/encodings/utf_8.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/utf_8.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/latin_1.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/encodings/latin_1.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/encodings/__pycache__/latin_1.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/io.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/io.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/io.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/abc.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/abc.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/abc.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/site.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/site.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/site.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/os.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/os.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/os.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/stat.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/stat.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/stat.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/_collections_abc.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/_collections_abc.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/_collections_abc.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/posixpath.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/posixpath.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/posixpath.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/genericpath.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/genericpath.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/genericpath.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/_sitebuiltins.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/_sitebuiltins.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/_sitebuiltins.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/_bootlocale.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/_bootlocale.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/_bootlocale.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/site-packages/_distutils_hack/__pycache__/__init__.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/site-packages/_distutils_hack/__init__.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/site-packages/_distutils_hack/__pycache__/__init__.cpython-39.pyc\'\\n",\n  "[GCC 7.5.0] :: Anaconda, Inc. on linux\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/site-packages/conda/__pycache__/__init__.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/site-packages/conda/__init__.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/site-packages/conda/__pycache__/__init__.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/__future__.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/__future__.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/__future__.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/json/__pycache__/__init__.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/json/__init__.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/json/__pycache__/__init__.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/json/__pycache__/decoder.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/json/decoder.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/json/__pycache__/decoder.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/re.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/re.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/re.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/enum.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/enum.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/enum.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/types.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/types.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/types.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/sre_compile.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/sre_compile.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/sre_compile.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/sre_parse.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/sre_parse.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/sre_parse.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/sre_constants.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/sre_constants.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/sre_constants.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/functools.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/functools.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/functools.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/collections/__pycache__/__init__.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/collections/__init__.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/collections/__pycache__/__init__.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/heapq.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/heapq.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/heapq.cpython-39.pyc\'\\n",\n  "# extension module \'_heapq\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_heapq.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_heapq\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_heapq.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/keyword.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/keyword.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/keyword.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/operator.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/operator.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/operator.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/reprlib.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/reprlib.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/reprlib.cpython-39.pyc\'\\n"\n ]\n},\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/copyreg.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/copyreg.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/copyreg.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/json/__pycache__/scanner.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/json/scanner.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/json/__pycache__/scanner.cpython-39.pyc\'\\n",\n  "# extension module \'_json\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_json.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_json\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_json.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/json/__pycache__/encoder.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/json/encoder.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/json/__pycache__/encoder.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/site-packages/conda/common/__pycache__/__init__.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/site-packages/conda/common/__init__.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/site-packages/conda/common/__pycache__/__init__.cpython-39.pyc\'\\n",\n  "import \'conda.common\' # <_frozen_importlib_external.SourceFileLoader object at 0x7f949d0bfc10>\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/site-packages/conda/common/__pycache__/compat.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/site-packages/conda/common/compat.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/site-packages/conda/common/__pycache__/compat.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/tempfile.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/tempfile.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/tempfile.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/warnings.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/warnings.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/warnings.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/shutil.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/shutil.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/shutil.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/fnmatch.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/fnmatch.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/fnmatch.cpython-39.pyc\'\\n",\n  "# extension module \'zlib\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/zlib.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'zlib\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/zlib.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/bz2.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/bz2.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/bz2.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/_compression.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/_compression.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/_compression.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/threading.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/threading.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/threading.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/_weakrefset.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/_weakrefset.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/_weakrefset.cpython-39.pyc\'\\n",\n  "# extension module \'_bz2\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_bz2.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_bz2\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_bz2.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/lzma.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/lzma.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/lzma.cpython-39.pyc\'\\n",\n  "# extension module \'_lzma\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_lzma.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_lzma\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_lzma.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'grp\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/grp.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'grp\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/grp.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/random.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/random.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/random.cpython-39.pyc\'\\n",\n  "# extension module \'math\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'math\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/bisect.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/bisect.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/bisect.cpython-39.pyc\'\\n",\n  "# extension module \'_bisect\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_bisect.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_bisect\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_bisect.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_random\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_random.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_random\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_random.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_sha512\' loaded from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_sha512.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# extension module \'_sha512\' executed from \'/home/aveey/miniconda3/lib/python3.9/lib-dynload/_sha512.cpython-39-x86_64-linux-gnu.so\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/__pycache__/weakref.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/weakref.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/__pycache__/weakref.cpython-39.pyc\'\\n",\n  "# /home/aveey/miniconda3/lib/python3.9/collections/__pycache__/abc.cpython-39.pyc matches /home/aveey/miniconda3/lib/python3.9/collections/abc.py\\n",\n  "# code object from \'/home/aveey/miniconda3/lib/python3.9/collections/__pycache__/abc.cpython-39.pyc\'\\n",\n  "import \'conda.common.compat\' # <_frozen_importlib_external.SourceFileLoader object at 0x7f949d131af0>\\n",\n  "import \'conda\' # <_frozen_importlib_external.SourceFileLoader object at 0x7f949d121400>\\n",\n  "# cleanup[2] removing conda.common\\n",\n  "# cleanup[2] removing conda.common.compat\\n",\n  "# cleanup[2] removing conda\\n",\n  "# destroy conda\\n",\n  "# destroy conda.common\\n",\n  "# destroy conda.common.compat\\n"\n ]\n}\n   ],\n   "source": [\n"# conda MODULE IS USED FOR TEST\\n",\n"\\n",\n"python-import-path \'conda\'\\n",\n"linebr\\n",\n"python-import-path-full \'conda\'\\n",\n"linebr\\n",\n"python-import-path-all \'conda\' | grep \'conda\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 26,\n   "id": "88b32c36",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# note: gotta hate python!\\n",\n"function python-module-version-full { local module=\\"$1\\"; python -c \\"import $module; print([v for v in [getattr($module, a, \'\') for a in \'__VERSION__ VERSION __version__ version\'.split()] if v][0])\\"; }\\n",\n"# TODO: check-error if no value returned\\n",\n"function python-module-version { python-module-version-full \\"$@\\" 2> /dev/null; }\\n",\n"function python-package-members() { local package=\\"$1\\"; python -c \\"import $package; print(dir($package));\\"; }\\n",\n"#\\n",\n"alias python-setup-install=\'log=setup.log;  rename-with-file-date $log;  uname -a > $log;  python setup.py install --record installed-files.list >> $log 2>&1;  ltc $log\'\\n",\n"# TODO: add -v (the xargs usage seems to block it)\\n",\n"alias python-uninstall-setup=\'cat installed-files.list | xargs /bin/rm -vi; rename_files.perl -regex ^ un installed-files.list\'\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 27,\n   "id": "c3bda266",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "1.3.0\\n",\n  "--------------------------------------------------------------------------------\\n",\n  "1.3.0\\n",\n  "--------------------------------------------------------------------------------\\n",\n  "[\'PYTHON3_PLUS\', \'TL\', \'__VERSION__\', \'__all__\', \'__builtins__\', \'__cached__\', \'__doc__\', \'__file__\', \'__loader__\', \'__name__\', \'__package__\', \'__path__\', \'__spec__\', \'__version__\', \'debug\', \'gh\', \'glue_helpers\', \'mezcla\', \'sys\', \'sys_version_info_hack\', \'system\', \'tpo_common\']\\n",\n  "--------------------------------------------------------------------------------\\n"\n ]\n}\n   ],\n   "source": [\n"# MODULE USED: mezcla\\n",\n"python-module-version-full mezcla\\n",\n"linebr\\n",\n"python-module-version mezcla\\n",\n"linebr\\n",\n"python-package-members mezcla\\n",\n"linebr"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 28,\n   "id": "f12d1371",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"## rename-with-file-date REQUIRED\\n",\n"function rename-with-file-date() {\\n",\n"    ## DEBUG: set -o xtrace\\n",\n"    local f new_f\\n",\n"    local move_command=\\"move\\"\\n",\n"    if [ \\"$1\\" = \\"--copy\\" ]; then\\n",\n"        ## TODO: move_command=\\"copy\\"\\n",\n"        move_command=\\"command cp --interactive --verbose --preserve\\"\\n",\n"        shift\\n",\n"    fi\\n",\n"    for f in \\"$@\\"; do\\n",\n"        ## DEBUG: echo \\"f=$f\\"\\n",\n"        if [ -e \\"$f\\" ]; then\\n",\n"           new_f=$(get-free-filename \\"$f\\".$(date --reference=\\"$f\\" \'+%d%b%y\') \\".\\")\\n",\n"           ## DEBUG: echo\\n",\n"           eval \\"$move_command\\" \\"$f\\" \\"$new_f\\";\\n",\n"        fi\\n",\n"    done;\\n",\n"    ## DEBUG: set - -o xtrace\\n",\n"}\\n",\n"\\n",\n"function get-free-filename() {\\n",\n"    local base=\\"$1\\"\\n",\n"    local sep=\\"$2\\"\\n",\n"    local L=1\\n",\n"    local filename=\\"$base\\"\\n",\n"    ## DEBUG: local -p\\n",\n"    while [ -e \\"$filename\\" ]; do\\n",\n"        let L++\\n",\n"        filename=\\"$base$sep$L\\"\\n",\n"    done;\\n",\n"    ## DEBUG: local -p\\n",\n"    echo \\"$filename\\"\\n",\n"}\\n",\n"\\n",\n"alias move=\'mv\'\\n",\n"export PAGER=less\\n",\n"export PAGER_CHOPPED=\\"less -S\\"\\n",\n"export PAGER_NOEXIT=\\"less -+F\\"\\n",\n"function zless () { zcat \\"$@\\" | $PAGER; }\\n",\n"# \\n",\n"# zhead(file, head-opts)\\n",\n"function zhead () {\\n",\n"    local file=\\"$1\\"\\n",\n"    shift\\n",\n"    zcat \\"$file\\" | head \\"$@\\"\\n",\n"}\\n",\n"alias less-=\'$PAGER_NOEXIT\'\\n",\n"alias less-clipped=\'$PAGER_NOEXIT -S\'\\n",\n"alias less-tail=\'$PAGER_NOEXIT +G\'\\n",\n"alias less-tail-clipped=\'$PAGER_NOEXIT +G -S\'\\n",\n"alias ltc=less-tail-clipped\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 29,\n   "id": "6e4b2871",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "--------------------------------------------------------------------------------\\n"\n ]\n}\n   ],\n   "source": [\n"## REQUIRES setup.py (TBC)\\n",\n"\\n",\n"#python-setup-install\\n",\n"linebr\\n",\n"#python-uninstall-setup"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 30,\n   "id": "f8812332",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# ipython(): overrides ipython command to set xterm title\\n",\n"alias set-xterm-window=\'set_xterm_title.bash\'\\n",\n"\\n",\n"function ipython() { \\n",\n"    local ipython=$(which ipython)\\n",\n"    if [ \\"$ipython\\" = \\"\\" ]; then echo \\"Error: install ipython first\\"; return; fi\\n",\n"    set-xterm-window \\"ipython [$PWD]\\"\\n",\n"    $ipython \\"$@\\"\\n",\n"}\\n",\n"\\n",\n"# python-trace(script, arg, ...): Run python SCRIPT with statement tracing\\n",\n"function python-trace {\\n",\n"    local script=\\"$1\\"\\n",\n"    shift\\n",\n"    $PYTHON -m trace --trace $(which \\"$script\\") \\"$@\\"\\n",\n"    }\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 31,\n   "id": "0fb4bd76",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "/home/aveey/bin/set_xterm_title.bash: line 239: /_set_xterm_title.7363.full.list: Permission denied\\n",\n  "/home/aveey/bin/set_xterm_title.bash: line 240: /_set_xterm_title.7363.icon.list: Permission denied\\n",\n  "\\u001b]1;ipython [/tmp/test-py-commands/test-3443]\\u0007\\u001b]2;ipython [/tmp/test-py-commands/test-3443]\\u0007=========\\n",\n  " IPython\\n",\n  "=========\\n",\n  "\\n",\n  "Tools for Interactive Computing in Python\\n",\n  "=========================================\\n",\n  "\\n",\n  "    A Python shell with automatic history (input and output), dynamic object\\n",\n  "    introspection, easier configuration, command completion, access to the\\n",\n  "    system shell and more.  IPython can also be embedded in running programs.\\n",\n  "\\n",\n  "Usage\\n",\n  "\\n",\n  "    ipython [subcommand] [options] [-c cmd | -m mod | file] [--] [arg] ...\\n",\n  "\\n",\n  "    If invoked with no options, it executes the file and exits, passing the\\n",\n  "    remaining arguments to the script, just as if you had specified the same\\n",\n  "    command with python. You may need to specify `--` before args to be passed\\n",\n  "    to the script, to prevent IPython from attempting to parse them. If you\\n",\n  "    specify the option `-i` before the filename, it will enter an interactive\\n",\n  "    IPython session after running the script, rather than exiting. Files ending\\n",\n  "    in .py will be treated as normal Python, but files ending in .ipy can\\n",\n  "    contain special IPython syntax (magic commands, shell expansions, etc.).\\n",\n  "\\n",\n  "    Almost all configuration in IPython is available via the command-line. Do\\n",\n  "    `ipython --help-all` to see all available options.  For persistent\\n",\n  "    configuration, look into your `ipython_config.py` configuration file for\\n",\n  "    details.\\n",\n  "\\n",\n  "    This file is typically installed in the `IPYTHONDIR` directory, and there\\n",\n  "    is a separate configuration directory for each profile. The default profile\\n",\n  "    directory will be located in $IPYTHONDIR/profile_default. IPYTHONDIR\\n",\n  "    defaults to to `$HOME/.ipython`.  For Windows users, $HOME resolves to\\n",\n  "    C:\\\\Users\\\\YourUserName in most instances.\\n",\n  "\\n",\n  "    To initialize a profile with the default configuration file, do::\\n",\n  "\\n",\n  "      $> ipython profile create\\n",\n  "\\n",\n  "    and start editing `IPYTHONDIR/profile_default/ipython_config.py`\\n",\n  "\\n",\n  "    In IPython\'s documentation, we will refer to this directory as\\n",\n  "    `IPYTHONDIR`, you can change its default location by creating an\\n",\n  "    environment variable with this name and setting it to the desired path.\\n",\n  "\\n",\n  "    For more information, see the manual available in HTML and PDF in your\\n",\n  "    installation, or online at https://ipython.org/documentation.html.\\n",\n  "\\n",\n  "Subcommands\\n",\n  "===========\\n",\n  "Subcommands are launched as `ipython cmd [args]`. For information on using\\n",\n  "subcommand \'cmd\', do: `ipython cmd -h`.\\n",\n  "\\n",\n  "profile\\n",\n  "    Create and manage IPython profiles.\\n",\n  "kernel\\n",\n  "    Start a kernel without an attached frontend.\\n",\n  "locate\\n",\n  "    print the path to the IPython dir\\n",\n  "history\\n",\n  "    Manage the IPython history database.\\n",\n  "\\n",\n  "Options\\n",\n  "=======\\n",\n  "The options below are convenience aliases to configurable class-options,\\n",\n  "as listed in the \\"Equivalent to\\" description-line of the aliases.\\n",\n  "To see all configurable class-options for some <cmd>, use:\\n",\n  "    <cmd> --help-all\\n",\n  "\\n",\n  "--debug\\n",\n  "    set log level to logging.DEBUG (maximize logging output)\\n",\n  "    Equivalent to: [--Application.log_level=10]\\n",\n  "--show-config\\n",\n  "    Show the application\'s configuration (human-readable format)\\n",\n  "    Equivalent to: [--Application.show_config=True]\\n",\n  "--show-config-json\\n",\n  "    Show the application\'s configuration (json format)\\n",\n  "    Equivalent to: [--Application.show_config_json=True]\\n",\n  "--quiet\\n",\n  "    set log level to logging.CRITICAL (minimize logging output)\\n",\n  "    Equivalent to: [--Application.log_level=50]\\n",\n  "--init\\n",\n  "    Initialize profile with default config files.  This is equivalent\\n",\n  "                to running `ipython profile create <profile>` prior to startup.\\n",\n  "    Equivalent to: [--BaseIPythonApplication.copy_config_files=True --BaseIPythonApplication.auto_create=True]\\n",\n  "--autoindent\\n",\n  "    Turn on autoindenting.\\n",\n  "    Equivalent to: [--InteractiveShell.autoindent=True]\\n",\n  "--no-autoindent\\n",\n  "    Turn off autoindenting.\\n",\n  "    Equivalent to: [--InteractiveShell.autoindent=False]\\n",\n  "--automagic\\n",\n  "    Turn on the auto calling of magic commands. Type %%magic at the\\n",\n  "            IPython  prompt  for  more information.\\n",\n  "    Equivalent to: [--InteractiveShell.automagic=True]\\n",\n  "--no-automagic\\n",\n  "    Turn off the auto calling of magic commands.\\n",\n  "    Equivalent to: [--InteractiveShell.automagic=False]\\n",\n  "--pdb\\n",\n  "    Enable auto calling the pdb debugger after every exception.\\n",\n  "    Equivalent to: [--InteractiveShell.pdb=True]\\n",\n  "--no-pdb\\n",\n  "    Disable auto calling the pdb debugger after every exception.\\n",\n  "    Equivalent to: [--InteractiveShell.pdb=False]\\n",\n  "--pprint\\n",\n  "    Enable auto pretty printing of results.\\n",\n  "    Equivalent to: [--PlainTextFormatter.pprint=True]\\n",\n  "--no-pprint\\n",\n  "    Disable auto pretty printing of results.\\n",\n  "    Equivalent to: [--PlainTextFormatter.pprint=False]\\n",\n  "--color-info\\n",\n  "    IPython can display information about objects via a set of functions,\\n",\n  "        and optionally can use colors for this, syntax highlighting\\n",\n  "        source code and various other elements. This is on by default, but can cause\\n",\n  "        problems with some pagers. If you see such problems, you can disable the\\n",\n  "        colours.\\n",\n  "    Equivalent to: [--InteractiveShell.color_info=True]\\n",\n  "--no-color-info\\n",\n  "    Disable using colors for info related things.\\n",\n  "    Equivalent to: [--InteractiveShell.color_info=False]\\n",\n  "--ignore-cwd\\n",\n  "    Exclude the current working directory from sys.path\\n",\n  "    Equivalent to: [--InteractiveShellApp.ignore_cwd=True]\\n",\n  "--no-ignore-cwd\\n",\n  "    Include the current working directory in sys.path\\n",\n  "    Equivalent to: [--InteractiveShellApp.ignore_cwd=False]\\n",\n  "--nosep\\n",\n  "    Eliminate all spacing between prompts.\\n",\n  "    Equivalent to: [--InteractiveShell.separate_in= --InteractiveShell.separate_out= --InteractiveShell.separate_out2=]\\n",\n  "--pylab\\n",\n  "    Pre-load matplotlib and numpy for interactive use with\\n",\n  "        the default matplotlib backend.\\n",\n  "    Equivalent to: [--InteractiveShellApp.pylab=auto]\\n",\n  "--matplotlib\\n",\n  "    Configure matplotlib for interactive use with\\n",\n  "        the default matplotlib backend.\\n",\n  "    Equivalent to: [--InteractiveShellApp.matplotlib=auto]\\n",\n  "--autoedit-syntax\\n",\n  "    Turn on auto editing of files with syntax errors.\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.autoedit_syntax=True]\\n",\n  "--no-autoedit-syntax\\n",\n  "    Turn off auto editing of files with syntax errors.\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.autoedit_syntax=False]\\n",\n  "--simple-prompt\\n",\n  "    Force simple minimal prompt using `raw_input`\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.simple_prompt=True]\\n",\n  "--no-simple-prompt\\n",\n  "    Use a rich interactive prompt with prompt_toolkit\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.simple_prompt=False]\\n",\n  "--banner\\n",\n  "    Display a banner upon starting IPython.\\n",\n  "    Equivalent to: [--TerminalIPythonApp.display_banner=True]\\n",\n  "--no-banner\\n",\n  "    Don\'t display a banner upon starting IPython.\\n",\n  "    Equivalent to: [--TerminalIPythonApp.display_banner=False]\\n",\n  "--confirm-exit\\n",\n  "    Set to confirm when you try to exit IPython with an EOF (Control-D\\n",\n  "        in Unix, Control-Z/Enter in Windows). By typing \'exit\' or \'quit\',\\n",\n  "        you can force a direct exit without any confirmation.\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.confirm_exit=True]\\n",\n  "--no-confirm-exit\\n",\n  "    Don\'t prompt the user when exiting.\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.confirm_exit=False]\\n",\n  "--term-title\\n",\n  "    Enable auto setting the terminal title.\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.term_title=True]\\n",\n  "--no-term-title\\n",\n  "    Disable auto setting the terminal title.\\n",\n  "    Equivalent to: [--TerminalInteractiveShell.term_title=False]\\n",\n  "--classic\\n",\n  "    Gives IPython a similar feel to the classic Python prompt.\\n",\n  "    Equivalent to: [--InteractiveShell.cache_size=0 --InteractiveShell.separate_in= --InteractiveShell.separate_out= --InteractiveShell.separate_out2= --InteractiveShell.colors=NoColor --InteractiveShell.xmode=Plain --PlainTextFormatter.pprint=False --TerminalInteractiveShell.prompts_class=IPython.terminal.prompts.ClassicPrompts]\\n",\n  "--quick\\n",\n  "    Enable quick startup with no config files.\\n",\n  "    Equivalent to: [--TerminalIPythonApp.quick=True]\\n",\n  "-i\\n",\n  "    If running code from the command line, become interactive afterwards.\\n",\n  "        It is often useful to follow this with `--` to treat remaining flags as\\n",\n  "        script arguments.\\n"\n ]\n},\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "    Equivalent to: [--TerminalIPythonApp.force_interact=True]\\n",\n  "--log-level=<Enum>\\n",\n  "    Set the log level by value or name.\\n",\n  "    Choices: any of [0, 10, 20, 30, 40, 50, \'DEBUG\', \'INFO\', \'WARN\', \'ERROR\', \'CRITICAL\']\\n",\n  "    Default: 30\\n",\n  "    Equivalent to: [--Application.log_level]\\n",\n  "--profile-dir=<Unicode>\\n",\n  "    Set the profile location directly. This overrides the logic used by the\\n",\n  "            `profile` option.\\n",\n  "    Default: \'\'\\n",\n  "    Equivalent to: [--ProfileDir.location]\\n",\n  "--profile=<Unicode>\\n",\n  "    The IPython profile to use.\\n",\n  "    Default: \'default\'\\n",\n  "    Equivalent to: [--BaseIPythonApplication.profile]\\n",\n  "--ipython-dir=<Unicode>\\n",\n  "    The name of the IPython directory. This directory is used for logging\\n",\n  "    configuration (through profiles), history storage, etc. The default is\\n",\n  "    usually $HOME/.ipython. This option can also be specified through the\\n",\n  "    environment variable IPYTHONDIR.\\n",\n  "    Default: \'\'\\n",\n  "    Equivalent to: [--BaseIPythonApplication.ipython_dir]\\n",\n  "--config=<Unicode>\\n",\n  "    Path to an extra config file to load.\\n",\n  "        If specified, load this config file in addition to any other IPython\\n",\n  "    config.\\n",\n  "    Default: \'\'\\n",\n  "    Equivalent to: [--BaseIPythonApplication.extra_config_file]\\n",\n  "--autocall=<Enum>\\n",\n  "    Make IPython automatically call any callable object even if you didn\'t type\\n",\n  "    explicit parentheses. For example, \'str 43\' becomes \'str(43)\' automatically.\\n",\n  "    The value can be \'0\' to disable the feature, \'1\' for \'smart\' autocall, where\\n",\n  "    it is not applied if there are no more arguments on the line, and \'2\' for\\n",\n  "    \'full\' autocall, where all callable objects are automatically called (even\\n",\n  "    if no arguments are present).\\n",\n  "    Choices: any of [0, 1, 2]\\n",\n  "    Default: 0\\n",\n  "    Equivalent to: [--InteractiveShell.autocall]\\n",\n  "--colors=<CaselessStrEnum>\\n",\n  "    Set the color scheme (NoColor, Neutral, Linux, or LightBG).\\n",\n  "    Choices: any of [\'Neutral\', \'NoColor\', \'LightBG\', \'Linux\'] (case-insensitive)\\n",\n  "    Default: \'Neutral\'\\n",\n  "    Equivalent to: [--InteractiveShell.colors]\\n",\n  "--logfile=<Unicode>\\n",\n  "    The name of the logfile to use.\\n",\n  "    Default: \'\'\\n",\n  "    Equivalent to: [--InteractiveShell.logfile]\\n",\n  "--logappend=<Unicode>\\n",\n  "    Start logging to the given file in append mode. Use `logfile` to specify a\\n",\n  "    log file to **overwrite** logs to.\\n",\n  "    Default: \'\'\\n",\n  "    Equivalent to: [--InteractiveShell.logappend]\\n",\n  "-c=<Unicode>\\n",\n  "    Execute the given command string.\\n",\n  "    Default: \'\'\\n",\n  "    Equivalent to: [--InteractiveShellApp.code_to_run]\\n",\n  "-m=<Unicode>\\n",\n  "    Run the module as a script.\\n",\n  "    Default: \'\'\\n",\n  "    Equivalent to: [--InteractiveShellApp.module_to_run]\\n",\n  "--ext=<list-item-1>...\\n",\n  "    Dotted module name(s) of one or more IPython extensions to load.\\n",\n  "    For specifying extra extensions to load on the command-line.\\n",\n  "    .. versionadded:: 7.10\\n",\n  "    Default: []\\n",\n  "    Equivalent to: [--InteractiveShellApp.extra_extensions]\\n",\n  "--gui=<CaselessStrEnum>\\n",\n  "    Enable GUI event loop integration with any of (\'asyncio\', \'glut\', \'gtk\',\\n",\n  "    \'gtk2\', \'gtk3\', \'gtk4\', \'osx\', \'pyglet\', \'qt\', \'qt4\', \'qt5\', \'qt6\', \'tk\',\\n",\n  "    \'wx\', \'gtk2\', \'qt4\').\\n",\n  "    Choices: any of [\'asyncio\', \'glut\', \'gtk\', \'gtk2\', \'gtk3\', \'gtk4\', \'osx\', \'pyglet\', \'qt\', \'qt4\', \'qt5\', \'qt6\', \'tk\', \'wx\', \'gtk2\', \'qt4\'] (case-insensitive) or None\\n",\n  "    Default: None\\n",\n  "    Equivalent to: [--InteractiveShellApp.gui]\\n",\n  "--pylab=<CaselessStrEnum>\\n",\n  "    Pre-load matplotlib and numpy for interactive use,\\n",\n  "            selecting a particular matplotlib backend and loop integration.\\n",\n  "    Choices: any of [\'auto\', \'agg\', \'gtk\', \'gtk3\', \'gtk4\', \'inline\', \'ipympl\', \'nbagg\', \'notebook\', \'osx\', \'pdf\', \'ps\', \'qt\', \'qt4\', \'qt5\', \'qt6\', \'svg\', \'tk\', \'widget\', \'wx\'] (case-insensitive) or None\\n",\n  "    Default: None\\n",\n  "    Equivalent to: [--InteractiveShellApp.pylab]\\n",\n  "--matplotlib=<CaselessStrEnum>\\n",\n  "    Configure matplotlib for interactive use with\\n",\n  "            the default matplotlib backend.\\n",\n  "    Choices: any of [\'auto\', \'agg\', \'gtk\', \'gtk3\', \'gtk4\', \'inline\', \'ipympl\', \'nbagg\', \'notebook\', \'osx\', \'pdf\', \'ps\', \'qt\', \'qt4\', \'qt5\', \'qt6\', \'svg\', \'tk\', \'widget\', \'wx\'] (case-insensitive) or None\\n",\n  "    Default: None\\n",\n  "    Equivalent to: [--InteractiveShellApp.matplotlib]\\n",\n  "--cache-size=<Int>\\n",\n  "    Set the size of the output cache.  The default is 1000, you can change it\\n",\n  "    permanently in your config file.  Setting it to 0 completely disables the\\n",\n  "    caching system, and the minimum value accepted is 3 (if you provide a value\\n",\n  "    less than 3, it is reset to 0 and a warning is issued).  This limit is\\n",\n  "    defined because otherwise you\'ll spend more time re-flushing a too small\\n",\n  "    cache than working\\n",\n  "    Default: 1000\\n",\n  "    Equivalent to: [--InteractiveShell.cache_size]\\n",\n  "\\n",\n  "Examples\\n",\n  "--------\\n",\n  "\\n",\n  "    ipython --matplotlib       # enable matplotlib integration\\n",\n  "    ipython --matplotlib=qt    # enable matplotlib integration with qt4 backend\\n",\n  "\\n",\n  "    ipython --log-level=DEBUG  # set logging to DEBUG\\n",\n  "    ipython --profile=foo      # start with profile foo\\n",\n  "\\n",\n  "    ipython profile create foo # create profile foo w/ default config files\\n",\n  "    ipython help profile       # show the help for the profile subcmd\\n",\n  "\\n",\n  "    ipython locate             # print the path to the IPython directory\\n",\n  "    ipython locate profile foo # print the path to the directory for profile `foo`\\n",\n  "\\n",\n  "To see all available configurables, use `--help-all`.\\n",\n  "\\n"\n ]\n}\n   ],\n   "source": [\n"# ipython COMMAND SEEMS TO WORK\\n",\n"ipython -h"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 32,\n   "id": "3bd43a50",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"#python-trace l $BIN_DIR/template.py \\n",\n"#(need some help to test it properly - works / extremely time consuming)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 33,\n   "id": "b36455c6",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "/home/aveey/miniconda3/bin/python\\n",\n  "--------------------------------------------------------------------------------\\n",\n  "/home/aveey/miniconda3/bin/python3\\n"\n ]\n}\n   ],\n   "source": [\n"# which-python SHOWS THE PATH OF PYTHON\\n",\n"alias which-python=\'which python\'\\n",\n"which-python\\n",\n"linebr\\n",\n"alias which-py3=\'which python3\' #(ADDED FOR PYTHON3)\\n",\n"which-py3"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 34,\n   "id": "ed4439cb",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "/tmp/test-py-commands/test-3443\\n"\n ]\n}\n   ],\n   "source": [\n"# py-diff : CHECKS THE DIFFERENCE BETWEEN THE PYTHON FILES\\n",\n"# TODO: specify options before the pattern (or modify do_diff.sh to allow after)\\n",\n"function py-diff () { do_diff.sh \'*.py *.mako\' \\"$@\\" 2>&1 | $PAGER; }\\n",\n"pwd"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 35,\n   "id": "08329d8b",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "abc1.py  atest.py  xyz.py\\n"\n ]\n}\n   ],\n   "source": [\n"#py-diff $BIN_DIR/tests/batspp.py $BIN_DIR/tests/ipynb_to_batspp.py (NEVER USE abc.py)\\n",\n"rm -rf ./*\\n",\n"printf \\"print(\'THIS IS A TEST\')\\" > atest.py\\n",\n"printf \\"print(\'THIS IS A TEST\')\\" > xyz.py\\n",\n"printf \\"print(\'THIS IS A TEST11\')\\" > abc1.py\\n",\n"ls"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 36,\n   "id": "2170c0a2",\n   "metadata": {\n"scrolled": true\n   },\n   "outputs": [],\n   "source": [\n"# $ py-diff ./ \\n",\n"#(help required - process not ending)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 37,\n   "id": "eaa5f6d0",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# TEST NOT APPLICABLE RN \\n",\n"function kivy-win32-env {\\n",\n"   export PYTHONPATH=\'c:/cartera-de-tomas/python;c:/Program-Misc/python/kivy-1-9-0/kivy27\'\\n",\n"   kivy_dir=\\"/c/Program-Misc/python/kivy-1-9-0\\"\\n",\n"   python_dir=\\"$kivy_dir/Python27\\"\\n",\n"   prepend-path \\"$kivy_dir:$kivy_dir/Python27:$kivy_dir/tools:$kivy_dir/Python27/Scripts:$kivy_dir/gstreamer/bin:$kivy_dir/MinGW/bin:$kivy_dir/SDL2/bin\\"\\n",\n"}"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 38,\n   "id": "7a76a0af",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"alias elide-data=\'python -m transpose_data --elide\'\\n",\n"alias kill-python=\\"kill_em.sh --filter \'ipython|emacs\' python\\"\\n",\n"alias kill-python-all=\\"kill_em.sh python\\""\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 39,\n   "id": "5c13c9ad",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "linux-gnu\\n",\n  "--------------------------------------------------------------------------------\\n"\n ]\n}\n   ],\n   "source": [\n"# # ERRORS = OSTYPE is \'undefined variable\' \\n",\n"# # NOTE: elide-data shows RuntimeError if any testfile is named abc.py\\n",\n"\\n",\n"# $ echo $OSTYPE\\n",\n"#   linebr\\n",\n"#   elide-data $BIN_DIR/template.py\\n",\n"#   linebr\\n",\n"#   kill-python\\n",\n"#   linebr\\n",\n"#   kill-python-all\\n",\n"\\n",\n"# | linux-gnu\\n",\n"# | --------------------------------------------------------------------------------\\n",\n"# | /home/aveey/miniconda3/bin/python: No module named transpose_data\\n",\n"# | --------------------------------------------------------------------------------\\n",\n"# | pattern=/:[0-9][0-9] [^ ]*python/\\n",\n"# | filter=/ipython|emacs/\\n",\n"# | OSTYPE: Undefined variable.\\n",\n"# | --------------------------------------------------------------------------------\\n",\n"# | pattern=/:[0-9][0-9] [^ ]*python/\\n",\n"# | filter=/($)(^)/\\n",\n"# | OSTYPE: Undefined variable.\\n",\n"\\n",\n"echo $OSTYPE\\n",\n"linebr\\n",\n"\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 40,\n   "id": "48da66dc",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# run-jupyter-notebook(port=18888): run jupyter notebook on PORT\\n",\n"alias TODAY=\'date\'\\n",\n"alias extract-matches=\'extract_matches.perl\'\\n",\n"\\n",\n"function run-jupyter-notebook () {\\n",\n"    local port=\\"$1\\"; if [ \\"$port\\" = \\"\\" ]; then port=8888; fi\\n",\n"    local ip=\\"$2\\"; if [ \\"$ip\\" = \\"\\" ]; then ip=\\"127.0.0.1\\"; fi\\n",\n"    local log=\\"$TEMP/jupyter-$(TODAY).log\\"\\n",\n"    jupyter notebook --NotebookApp.token=\'\' --no-browser --port $port --ip $ip >> \\"$log\\" 2>&1 &\\n",\n"    echo \\"$log\\"\\n",\n"    # Let jupyter initialize\\n",\n"    local delay=5\\n",\n"    echo \\"sleeping $delay seconds for log to stabalize (effing jupyter)\\"\\n",\n"    sleep $delay\\n",\n"    # TODO: resolve problem extracting URL\\n",\n"    # TEMP:\\n",\n"    tail \\"$log\\"\\n",\n"    # Show URL\\n",\n"    echo -n \\"URL: \\"\\n",\n"    extract-matches \'http:\\\\S+\' \\"$log\\" | sort -u\\n",\n"}\\n",\n"alias jupyter-notebook-redir=run-jupyter-notebook\\n",\n"alias jupyter-notebook-redir-open=\'run-jupyter-notebook 8888 0.0.0.0\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 41,\n   "id": "ff417aa3",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# # ERROR GENERATED (see below)\\n",\n"# $ jupyter-notebook-redir-open\\n",\n"\\n",\n"# | [1] 5335\\n",\n"# | /jupyter-Sun Aug 28 08:13:40 AM +0545 2022.log\\n",\n"# | sleeping 5 seconds for log to stabalize (effing jupyter)\\n",\n"# | bash: /jupyter-Sun Aug 28 08:13:40 AM +0545 2022.log: Permission denied\\n",\n"# | [1]+  Exit 1                  jupyter notebook --NotebookApp.token=\'\' --no-browser --port $port --ip $ip >> \\"$log\\" 2>&1\\n",\n"# | tail: cannot open \'/jupyter-Sun Aug 28 08:13:40 AM +0545 2022.log\' for reading: No such file or directory\\n",\n"# | URL: Can\'t open /jupyter-Sun Aug 28 08:13:40 AM +0545 2022.log: No such file or directory at /home/aveey/bin/extract_matches.perl line 132.\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 42,\n   "id": "cd7cef57",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# Python-based utilities\\n",\n"function extract-text() { python -m extract_document_text \\"$@\\"; }\\n",\n"alias xtract-text=\'extract-text\'\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 43,\n   "id": "311de0a1",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# # ERROR - MODULE NOT FOUND\\n",\n"\\n",\n"# $ rm -rf ./*\\n",\n"#   printf \\"print(\'THIS IS A TEST FOR TEXT EXTRACT ALIAS.\')\\" > textex.py\\n",\n"#   xtract-text ./textex.py\\n",\n"\\n",\n"# | /home/aveey/miniconda3/bin/python: No module named extract_document_text"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 44,\n   "id": "393371d1",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"function test-script () {\\n",\n"    local base=$(basename \\"$1\\" .py)\\n",\n"    local date=$(todays-date)\\n",\n"    # note: uses both Mercurial root and . (in case not in repository)\\n",\n"    local root=$(hg root)\\n",\n"    PYTHONPATH=\\"$root:.:$SANDBOX/tests:$PYTHONPATH\\" $NICE $PYTHON tests/test_$base.py --verbose >| tests/_test_$base.$date.log 2>&1;\\n",\n"    less-tail tests/_test_$base.$date.log;\\n",\n"}\\n",\n"#\\n",\n"alias test-script-debug=\'ALLOW_SUBCOMMAND_TRACING=1 DEBUG_LEVEL=5 MISC_TRACING_LEVEL=5 test-script\'\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 45,\n   "id": "90b1a9c1",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# # ERROR (LOG FILE NOT FOUND)\\n",\n"# $ test-script ./textex.py\\n",\n"# | abort: no repository found in \'/tmp/test-py-commands/test-3443\' (.hg not found)\\n",\n"# | bash: tests/_test_textex.03sep22.log: No such file or directory\\n",\n"# | tests/_test_textex.03sep22.log: No such file or directory"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 46,\n   "id": "d40cd965",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# randomize-datafie(file, [num[): randomize datafile optionally pruned to NUM lines, preserving header line\\n",\n"#\\n",\n"function randomize-datafile() {\\n",\n"    local file=\\"$1\\"\\n",\n"    local num_lines=\\"$2\\"\\n",\n"    if [ \\"$num_lines\\" = \\"\\" ]; then num_lines=$(wc -l \\"$file\\"); fi\\n",\n"    #\\n",\n"    head -1 \\"$file\\"\\n",\n"    tail --lines=+2 \\"$file\\" | python -m randomize_lines | head -$num_lines\\n",\n"}\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 47,\n   "id": "54f09793",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "#! /usr/bin/env python\\n",\n  "#! /usr/bin/env python\\n",\n  "\\n",\n  "import sys\\n",\n  "import os\\n",\n  "\\n",\n  "filename_arg = sys.argv\\n",\n  "file_in_ipynb = filename_arg[1]\\n",\n  "\\n",\n  "def batspp_rename():\\n",\n  "    file_in_batspp = file_in_ipynb.replace(\\".ipynb\\", \\".batspp\\")#<--CONVERTS EXTENSION TO BATSPP\\n",\n  "    RENAME_COMMAND = f\\"mv {file_in_ipynb} {file_in_batspp}\\"#<--COMMAND TO BE EXECUTED\\n",\n  "    \\n",\n  "    os.system(RENAME_COMMAND)\\n",\n  "    print(f\\"Changes were made to {file_in_ipynb}.\\\\n\\\\nFILE RENAMED:\\\\n{file_in_ipynb} --> {file_in_batspp}\\")\\n",\n  "\\n",\n  "# START OF MAIN #\\n",\n  "if \\".ipynb\\" in file_in_ipynb:\\n",\n  "    batspp_rename()\\n",\n  "else:\\n",\n  "    print (f\\"The selected file is not an IPython file.\\\\nNo changes were made to the file: {file_in_ipynb}\\")    \\n",\n  "/home/aveey/miniconda3/bin/python: No module named randomize_lines\\n"\n ]\n}\n   ],\n   "source": [\n"# ERROR : MISSING MODULE (No module named randomize_lines)\\n",\n"randomize-datafile $BIN_DIR/tests/ipynb_to_batspp.py\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 48,\n   "id": "e8e581ee",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# filter-random(pct, file, [include_header=1])Randomize lines based on percentages, using output lile (e.g., _r10pct-fubar.data).\\n",\n"# Notes:\\n",\n"# - By default, includes first line assuming it is header line.\\n",\n"# - Includes support for compressed files (both input and output).\\n",\n"function filter-random() {\\n",\n"    local pct=\\"$1\\"\\n",\n"    local file=\\"$2\\"\\n",\n"    local include_header=\\"$3\\"\\n",\n"    if [ \\"$include_header\\" == \\"\\" ]; then include_header=1; fi\\n",\n"\\n",\n"    # Derive settings from input arguments\\n",\n"    local ratio=$(perl -e \\"printf(\'%.3f\', ($pct / 100.0));\\")\\n",\n"    local compressed=0\\n",\n"    if [[ $file =~ .gz ]]; then compressed=1; fi\\n",\n"    local dir=$(dirname $file)\\n",\n"    local base=$(basename $file)\\n",\n"    local type=\\"cat\\"\\n",\n"    local result=\\"$dir/_r${pct}pct-$base\\"\\n",\n"\\n",\n"    # Filter the file, optionally uncompressing\\n",\n"    if [ \\"$compressed\\" = \\"1\\" ]; then \\n",\n"       type=\\"zcat\\"; \\n",\n"       result=$(echo \\"$result\\" | perl -pe \'s/.gz$//;\')\\n",\n"    fi\\n",\n"    local opts=\\"\\"\\n",\n"    if [ \\"$include_header\\" = \\"1\\" ]; then opts=\\"$opt --include-header\\"; fi\\n",\n"    $type \\"$file\\" | $PYTHON -m filter_random $opts --ratio $ratio - > \\"$result\\" 2> \\"$result.log\\"\\n",\n"\\n",\n"    # Compress result if original compressed\\n",\n"    if [ \\"$compressed\\" = \\"1\\" ]; then \\n",\n"       gzip --force \\"$result\\"; \\n",\n"    fi\\n",\n"}"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 49,\n   "id": "14e001ee",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# filter-random _r10pct-fubar.data (TBF - NEED HELP OPERATING)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 50,\n   "id": "e7b608f3",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"# Load supporting scripts\\n",\n"#\\n",\n"function conditional-source () { if [ -e \\"$1\\" ]; then source \\"$1\\"; else echo \\"Warning: bash script file not found (so not sourced):\\"; echo \\"    $1\\"; fi; }\\n",\n"function quiet-unalias {\\n",\n"    ## HACK: do nothing if running under bats-core\\n",\n"    if [ \\"$BATS_TEST_FILENAME\\" != \\"\\" ]; then\\n",\n"        if [ \\"$BATCH_MODE\\" != \\"1\\" ]; then\\n",\n"            echo \\"Ignoring unalias over $* for sake of bats\\"\\n",\n"        fi\\n",\n"        return\\n",\n"    fi\\n",\n"    ## OLD: unalias \\"$@\\" 2> /dev/null;\\n",\n"    unalias \\"$@\\" 2> /dev/null || true;\\n",\n"    ## OLD: echo > /dev/null;\\n",\n"}\\n",\n"\\n",\n"conditional-source $BIN_DIR/anaconda-aliases.bash\\n",\n"conditional-source $BIN_DIR/git-aliases.bash\\n",\n"\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 51,\n   "id": "1ba1bc6c",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"function curl-dump () {\\n",\n"    local url=\\"$1\\";\\n",\n"    local base=$(basename $url);\\n",\n"    curl $url > $base;\\n",\n"}\\n",\n"# EX: url-path $BIN/templata.html => \\"file:///$BIN/template.html\\"\\n",\n"function url-path () {\\n",\n"    local file=\\"$1\\"\\n",\n"    echo $(realpath \\"$file\\") | perl -pe \'s@^@file:///@;\'\\n",\n"}"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 52,\n   "id": "8331970a",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\\n",\n  "                                 Dload  Upload   Total   Spent    Left  Speed\\n",\n  "100 16501    0 16501    0     0  43876      0 --:--:-- --:--:-- --:--:-- 44002\\n",\n  "--------------------------------------------------------------------------------\\n",\n  "total 32\\n",\n  "-rw-rw-r-- 1 aveey aveey    25 Sep  3 21:18 abc1.py\\n",\n  "-rw-rw-r-- 1 aveey aveey    23 Sep  3 21:18 atest.py\\n",\n  "-rw-rw-r-- 1 aveey aveey 16501 Sep  3 21:18 www.google.com\\n",\n  "-rw-rw-r-- 1 aveey aveey    23 Sep  3 21:18 xyz.py\\n",\n  "--------------------------------------------------------------------------------\\n",\n  "file:////home/aveey/tom-project/shell-scripts/tests/batspp.py\\n"\n ]\n}\n   ],\n   "source": [\n"# TESTS FOR curl-dump AND url-path\\n",\n"curl-dump https://www.google.com/\\n",\n"linebr\\n",\n"ls -l\\n",\n"linebr\\n",\n"url-path $BIN_DIR/tests/batspp.py"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 53,\n   "id": "a98b1d54",\n   "metadata": {},\n   "outputs": [],\n   "source": [\n"function invoke-browser() {\\n",\n"    local browser_executable=\\"$1\\"\\n",\n"    local file=\\"$2\\"\\n",\n"    if [ \\"$file\\" != \\"\\" ]; then\\n",\n"        if [[ ! $file =~ http ]]; then\\n",\n"            file=$(url-path \\"$file\\")\\n",\n"        fi\\n",\n"    fi\\n",\n"    ## TODO?\\n",\n"    ## if [ ! -e \\"$browser_executable\\" ]; then\\n",\n"    ##     browser_executable_path=$(which \\"browser_executable\\")\\n",\n"    ##     if [ \\"$browser_executable_path\\" = \\"\\" ]; then browser_executable=\\"$_path\\"; fi   \\n",\n"    ## fi\\n",\n"    local browser_base=$(basename \\"$browser_executable\\")\\n",\n"    $browser_executable \\"$file\\" >> $TEMP/$browser_base.$(TODAY).log 2>&1 &\\n",\n"}\\n",\n"\\n",\n"alias firefox=\'invoke-browser \\"\'\\"$(which firefox)\\"\'\\"\'"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 54,\n   "id": "5143a042",\n   "metadata": {},\n   "outputs": [\n{\n "name": "stdout",\n "output_type": "stream",\n "text": [\n  "bash: syntax error near unexpected token `(\'\\n"\n ]\n},\n{\n "ename": "",\n "evalue": "2",\n "output_type": "error",\n "traceback": []\n}\n   ],\n   "source": [\n"firefox #(#TESTS REMAINS FOR invoke-browser)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": null,\n   "id": "7ad94254",\n   "metadata": {},\n   "outputs": [],\n   "source": []\n  }\n ],\n "metadata": {\n  "kernelspec": {\n   "display_name": "Bash",\n   "language": "bash",\n   "name": "bash"\n  },\n  "language_info": {\n   "codemirror_mode": "shell",\n   "file_extension": ".sh",\n   "mimetype": "text/x-sh",\n   "name": "bash"\n  }\n },\n "nbformat": 4,\n "nbformat_minor": 5\n}'
}
