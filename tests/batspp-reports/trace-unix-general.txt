#!/usr/bin/env bats


# Make executables ./tests/../ visible to PATH
PATH="/home/aveey/tom-project/shell-scripts/tests/../:$PATH"

# Source files
shopt -s expand_aliases


@test "test0" {
	test_folder=$(echo /tmp/test0-$$)
	mkdir $test_folder && cd $test_folder

	bind 'set enable-bracketed-paste off'
	echo "BIND ON!"
}


@test "test1" {
	test_folder=$(echo /tmp/test1-$$)
	mkdir $test_folder && cd $test_folder

}


@test "test2" {
	test_folder=$(echo /tmp/test2-$$)
	mkdir $test_folder && cd $test_folder

	unalias -a
	alias | wc -l
	for f in $(typeset -f | egrep '^\w+'); do unset -f $f; done
	actual=$(test2-assert4-actual)
	expected=$(test2-assert4-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test2-assert4-actual () {
	typeset -f | egrep '^\w+' | wc -l
}
function test2-assert4-expected () {
	echo -e '00'
}

@test "test3" {
	test_folder=$(echo /tmp/test3-$$)
	mkdir $test_folder && cd $test_folder

	BIN_DIR=$PWD/..
	actual=$(test3-assert2-actual)
	expected=$(test3-assert2-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test3-assert2-actual () {
	alias | wc -l
}
function test3-assert2-expected () {
	echo -e '0'
}

@test "test4" {
	test_folder=$(echo /tmp/test4-$$)
	mkdir $test_folder && cd $test_folder

	temp_dir=$TMP/test-3245
	cd "$temp_dir"
}


@test "test5" {
	test_folder=$(echo /tmp/test5-$$)
	mkdir $test_folder && cd $test_folder

	actual=$(test5-assert1-actual)
	expected=$(test5-assert1-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test5-assert1-actual () {
	typeset -f | egrep '^\w+' | wc -l
}
function test5-assert1-expected () {
	echo -e '10'
}

@test "test6" {
	test_folder=$(echo /tmp/test6-$$)
	mkdir $test_folder && cd $test_folder

	function ps-all () { 
	local pattern="$1";
	local pager=cat;
	if [ "$pattern" = "" ]; then 
	pattern="."; 
	pager=$PAGER
	fi;
	ps_mine.sh --all | $EGREP -i "((^USER)|($pattern))" | $pager;
	}
	alias ps-script='ps-all "\\bscript\\b" | $GREP -v "(gnome-session)"'
	function ps-sort-once { ps_sort.perl -num_times=1 -by=time "$@" -; }
	alias ps-sort-time='ps-sort-once -by=time'
	alias ps-time=ps-sort-time
	alias ps-sort-mem='ps-sort-once -by=mem '
	alias ps-mem=ps-sort-mem
}


@test "test7" {
	test_folder=$(echo /tmp/test7-$$)
	mkdir $test_folder && cd $test_folder

	alias ps-script='ps-all "\\bscript\\b" | $GREP -v "(gnome-session)"'
	function ps-sort-once { ps_sort.perl -num_times=1 -by=time "$@" -; }
	alias ps-sort-time='ps-sort-once -by=time'
	alias ps-time=ps-sort-time
	alias ps-sort-mem='ps-sort-once -by=mem '
	alias ps-mem=ps-sort-mem
}


@test "test8" {
	test_folder=$(echo /tmp/test8-$$)
	mkdir $test_folder && cd $test_folder

	actual=$(test8-assert1-actual)
	expected=$(test8-assert1-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test8-assert1-actual () {
	ps-sort-time
}
function test8-assert1-expected () {
	echo -e 'Error: bad sort field (time): using cpuUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDaveey       1625 11.5 11.9 3448500 439304 ?      Sl   20:32   9:53 /snap/firefaveey       9008 11.5  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/pyaveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firefaveey       8806  3.1  4.7 2516088 174328 ?      Sl   21:55   0:06 /snap/firefaveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upworkroot         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xoaveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firefaveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firefaveey       9018  1.0  0.1  11480  5564 pts/2    Ss   21:58   0:00 /usr/bin/baaveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firefaveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upworkaveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/pyaveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firefaveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firefaveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firefaveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pcaveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lxaveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termiroot        7741  0.1  0.0      0     0 ?        I    21:30   0:02 [kworker/2:root           1  0.0  0.3 166312 11684 ?        Ss   20:24   0:01 /sbin/init root           2  0.0  0.0      0     0 ?        S    20:24   0:00 [kthreadd]root           3  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_gp]root           4  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_par_gproot           5  0.0  0.0      0     0 ?        I<   20:24   0:00 [netns]root           7  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:root           9  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:root          10  0.0  0.0      0     0 ?        I<   20:24   0:00 [mm_percpu_root          11  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_root          12  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_root          13  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/root          14  0.0  0.0      0     0 ?        I    20:24   0:02 [rcu_sched]root          15  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/root          16  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injecroot          18  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/0]root          19  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/1]root          20  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injecroot          21  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/root          22  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/'
}

@test "test9" {
	test_folder=$(echo /tmp/test9-$$)
	mkdir $test_folder && cd $test_folder

	actual=$(test9-assert1-actual)
	expected=$(test9-assert1-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test9-assert1-actual () {
	ps-time
}
function test9-assert1-expected () {
	echo -e 'Error: bad sort field (time): using cpuUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDaveey       9008 12.0  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/pyaveey       1625 11.5 12.0 3448500 443204 ?      Sl   20:32   9:53 /snap/firefaveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firefaveey       8806  3.2  4.7 2517112 174804 ?      Sl   21:55   0:06 /snap/firefaveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upworkroot         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xoaveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firefaveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firefaveey       9018  1.0  0.1  11480  5564 pts/2    Ss   21:58   0:00 /usr/bin/baaveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firefaveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upworkaveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/pyaveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firefaveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firefaveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firefaveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pcaveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lxaveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termiroot        7741  0.1  0.0      0     0 ?        I    21:30   0:02 [kworker/2:root           1  0.0  0.3 166312 11684 ?        Ss   20:24   0:01 /sbin/init root           2  0.0  0.0      0     0 ?        S    20:24   0:00 [kthreadd]root           3  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_gp]root           4  0.0  0.0      0     0 ?        I<   20:24   0:00 [rcu_par_gproot           5  0.0  0.0      0     0 ?        I<   20:24   0:00 [netns]root           7  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:root           9  0.0  0.0      0     0 ?        I<   20:24   0:00 [kworker/0:root          10  0.0  0.0      0     0 ?        I<   20:24   0:00 [mm_percpu_root          11  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_root          12  0.0  0.0      0     0 ?        S    20:24   0:00 [rcu_tasks_root          13  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/root          14  0.0  0.0      0     0 ?        I    20:24   0:02 [rcu_sched]root          15  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/root          16  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injecroot          18  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/0]root          19  0.0  0.0      0     0 ?        S    20:24   0:00 [cpuhp/1]root          20  0.0  0.0      0     0 ?        S    20:24   0:00 [idle_injecroot          21  0.0  0.0      0     0 ?        S    20:24   0:00 [migration/root          22  0.0  0.0      0     0 ?        S    20:24   0:00 [ksoftirqd/'
}

@test "test10" {
	test_folder=$(echo /tmp/test10-$$)
	mkdir $test_folder && cd $test_folder

	actual=$(test10-assert1-actual)
	expected=$(test10-assert1-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test10-assert1-actual () {
	ps-sort-mem
}
function test10-assert1-expected () {
	echo -e 'USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDaveey       1625 11.5 11.9 3448500 442036 ?      Sl   20:32   9:54 /snap/firefaveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firefaveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upworkaveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firefaveey       8806  3.2  4.7 2518136 176668 ?      Sl   21:55   0:06 /snap/firefaveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upworkaveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firefaveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firefaveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pcaveey       1834  0.0  3.0 2441784 112980 ?      Sl   20:33   0:02 /snap/firefroot         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xoaveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lxaveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termiaveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/pyaveey       1438  0.0  1.9 290432 71944 ?        Sl   20:28   0:04 /opt/Upworkaveey       8774  0.0  1.9 2414152 73396 ?       Sl   21:54   0:00 /snap/firefaveey       1510  0.0  1.8 4505372 68944 ?       Sl   20:29   0:00 /opt/Upworkaveey       1525  0.0  1.8 4503324 67324 ?       Sl   20:29   0:00 /opt/Upworkaveey       1536  0.0  1.7 4502300 66016 ?       Sl   20:29   0:00 /opt/Upworkaveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firefaveey       1423  0.0  1.6 274864 59284 ?        Sl   20:28   0:03 /opt/Upworkaveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firefaveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firefaveey       1495  0.0  1.4 522836 52640 ?        Sl   20:29   0:01 /opt/Upworkaveey       9008 12.4  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/pyaveey       1047  0.0  1.3 576372 48780 ?        Sl   20:27   0:01 /usr/bin/lxaveey       1192  0.0  1.2 503992 45232 ?        Sl   20:27   0:01 /usr/bin/lxaveey       1388  0.0  1.2 207348 44972 ?        S    20:28   0:00 /opt/Upworkaveey       1389  0.0  1.2 207348 45296 ?        S    20:28   0:00 /opt/Upworkaveey       1044  0.0  1.1 275844 40868 ?        Sl   20:27   0:00 /usr/bin/lxaveey        975  0.0  1.0 336624 38992 ?        Sl   20:27   0:01 lxqt-sessioaveey       1042  0.0  1.0 336148 37608 ?        Sl   20:27   0:00 /usr/bin/lxaveey       1046  0.0  1.0 409892 37412 ?        Sl   20:27   0:00 /usr/bin/lxaveey       1194  0.0  1.0 271484 39280 ?        Sl   20:27   0:00 /usr/bin/qlaveey       1196  0.0  1.0 272572 39152 ?        Sl   20:27   0:01 /usr/bin/nmaveey       1764  0.0  1.0 268144 37812 ?        Ssl  20:33   0:00 /usr/lib/x8aveey       2537  0.0  1.0 336716 40344 ?        Sl   20:33   0:00 /snap/firefaveey       1808  0.0  0.9 218724 36740 ?        Sl   20:33   0:00 /snap/firef'
}

@test "test11" {
	test_folder=$(echo /tmp/test11-$$)
	mkdir $test_folder && cd $test_folder

	actual=$(test11-assert1-actual)
	expected=$(test11-assert1-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test11-assert1-actual () {
	ps-mem
}
function test11-assert1-expected () {
	echo -e 'USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDaveey       1625 11.5 12.0 3448500 443324 ?      Sl   20:32   9:54 /snap/firefaveey       2374  1.5 10.2 2913000 377736 ?      Sl   20:33   1:18 /snap/firefaveey       1458  2.8  8.5 25952784 316196 ?     Sl   20:29   2:34 /opt/Upworkaveey       2335  2.0  6.0 2777836 222620 ?      Sl   20:33   1:45 /snap/firefaveey       8806  3.3  4.7 2519160 175056 ?      Sl   21:55   0:06 /snap/firefaveey       1386  0.5  4.4 4826816 164936 ?      Sl   20:28   0:27 /opt/Upworkaveey       1930  0.4  4.3 19553496 161048 ?     Sl   20:33   0:21 /snap/firefaveey       2510  3.8  4.2 2603616 156764 ?      Sl   20:33   3:16 /snap/firefaveey       1041  0.1  3.0 1532356 111584 ?      Sl   20:27   0:05 /usr/bin/pcaveey       1834  0.0  3.0 2441784 112980 ?      Sl   20:33   0:02 /snap/firefroot         881  2.7  2.9 686404 107080 tty1    Ssl+ 20:25   2:31 /usr/lib/xoaveey       1045  0.1  2.7 1206480 102684 ?      Sl   20:27   0:07 /usr/bin/lxaveey       1350  0.1  2.4 765940 91044 ?        Sl   20:28   0:09 xfce4-termiaveey       3041  0.5  2.0 243692 73844 pts/1    Sl+  20:38   0:25 /usr/bin/pyaveey       1438  0.0  1.9 290432 71944 ?        Sl   20:28   0:04 /opt/Upworkaveey       8774  0.0  1.9 2414152 73396 ?       Sl   21:54   0:00 /snap/firefaveey       1510  0.0  1.8 4505372 68944 ?       Sl   20:29   0:00 /opt/Upworkaveey       1525  0.0  1.8 4503324 67324 ?       Sl   20:29   0:00 /opt/Upworkaveey       1536  0.0  1.7 4502300 66016 ?       Sl   20:29   0:00 /opt/Upworkaveey       8952  0.3  1.7 2406920 62828 ?       Sl   21:57   0:00 /snap/firefaveey       1423  0.0  1.6 274864 59284 ?        Sl   20:28   0:03 /opt/Upworkaveey       8897  0.2  1.6 2407192 62340 ?       Sl   21:57   0:00 /snap/firefaveey       8988  0.8  1.6 2406912 61608 ?       Sl   21:58   0:00 /snap/firefaveey       1495  0.0  1.4 522836 52640 ?        Sl   20:29   0:01 /opt/Upworkaveey       9008 12.8  1.4 672904 51856 ?        Ssl  21:58   0:00 /usr/bin/pyaveey       1047  0.0  1.3 576372 48780 ?        Sl   20:27   0:01 /usr/bin/lxaveey       1192  0.0  1.2 503992 45232 ?        Sl   20:27   0:01 /usr/bin/lxaveey       1388  0.0  1.2 207348 44972 ?        S    20:28   0:00 /opt/Upworkaveey       1389  0.0  1.2 207348 45296 ?        S    20:28   0:00 /opt/Upworkaveey       1044  0.0  1.1 275844 40868 ?        Sl   20:27   0:00 /usr/bin/lxaveey        975  0.0  1.0 336624 38992 ?        Sl   20:27   0:01 lxqt-sessioaveey       1042  0.0  1.0 336148 37608 ?        Sl   20:27   0:00 /usr/bin/lxaveey       1046  0.0  1.0 409892 37412 ?        Sl   20:27   0:00 /usr/bin/lxaveey       1194  0.0  1.0 271484 39280 ?        Sl   20:27   0:00 /usr/bin/qlaveey       1196  0.0  1.0 272572 39152 ?        Sl   20:27   0:01 /usr/bin/nmaveey       1764  0.0  1.0 268144 37812 ?        Ssl  20:33   0:00 /usr/lib/x8aveey       2537  0.0  1.0 336716 40344 ?        Sl   20:33   0:00 /snap/firefaveey       1808  0.0  0.9 218724 36740 ?        Sl   20:33   0:00 /snap/firef'
}

@test "test12" {
	test_folder=$(echo /tmp/test12-$$)
	mkdir $test_folder && cd $test_folder

	function get-process-parent() { local pid="$1"; if [ "$pid" = "" ]; then pid=$$; fi; ps al | perl -Ssw extract_matches.perl "^\d+\s+\d+\s+$pid\s+(\d+)"; }
}


@test "test13" {
	test_folder=$(echo /tmp/test13-$$)
	mkdir $test_folder && cd $test_folder

	ps al | egrep "(PID|$$)"
	actual=$(test13-assert2-actual)
	expected=$(test13-assert2-expected)
	echo "========== actual =========="
	echo "$actual" | hexview.perl
	echo "========= expected ========="
	echo "$expected" | hexview.perl
	echo "============================"
	[ "$actual" == "$expected" ]

}

function test13-assert2-actual () {
	get-process-parent
}
function test13-assert2-expected () {
	echo -e 'F   UID     PID    PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND0  1000    9018    9008  20   0  11480  5564 do_wai Ss   pts/2      0:00 /usr/bin/bash --rcfile /usr/lib/python3/dist-packages/pexpect/bashrc.sh4  1000    9073    9018  20   0  12668  1572 -      R+   pts/2      0:00 ps al0  1000    9074    9018  20   0   9076  2304 pipe_r S+   pts/2      0:00 grep -E (PID|9018)--------------------------------------------------------------------------------9008'
}

@test "test14" {
	test_folder=$(echo /tmp/test14-$$)
	mkdir $test_folder && cd $test_folder

	function script {
	## THIS FUNCTION IS BUGGY
	## Note: set_xterm_title.bash keeps track of titles for each process, so save copies of current ones
	local save_full=$(set-xterm-title --print-full)
	local save_icon=$(set-xterm-title --print-icon)
	## DEBUG: echo "save_full='$save_full'; save_icon='$save_icon'"
	# Change prompt
	local old_PS_symbol="$PS_symbol"
	export SCRIPT_PID=$$
	# Note: the prompt change is flakey
	reset-prompt "$PS_symbol\$"
	## DEBUG: echo "script: 1. PS1='$PS1' old_PS_symbol='$old_PS_symbol' PS_symbol='$new_PS_symbol'"
	# Change xterm title to match
	set-title-to-current-dir
	## DEBUG: echo "script: 2. PS1='$PS1' old_PS_symbol='$old_PS_symbol' PS_symbol='$new_PS_symbol'"
	# Run command
	command script --append "$@"
	# Restore prompt
	unset SCRIPT_PID
	reset-prompt "$old_PS_symbol"
	## DEBUG: echo "script: 3. PS1='$PS1' old_PS_symbol='$old_PS_symbol' PS_symbol='$new_PS_symbol'"
	# Get rid of lingering 'script' in xterm title
	## DEBUG: echo "Restoring xterm title: full=$save_full save=$save_icon"
	set-xterm-title "$save_full" "$save_icon"
	}
	alias script-update='script _update-$(T).log'
}


@test "test15" {
	test_folder=$(echo /tmp/test15-$$)
	mkdir $test_folder && cd $test_folder

	function ansi-filter {
	local input_file="$1"
	if [ "$input_file" = "" ]; then
	input_file="$TMP/ansi-filter-in-$$.list"
	cat > "$input_file"
	fi
	local output_file="$TMP/ansi-filter-out-$$.list";
	ansifilter --input="$input_file" --output="$output_file"
	cat "$output_file"
	}
}


@test "test16" {
	test_folder=$(echo /tmp/test16-$$)
	mkdir $test_folder && cd $test_folder

	function pause-for-enter () {
	local message="$1"
	if [ "$message" = "" ]; then message="Press enter to continue"; fi
	read -p "$message "
	}
}
